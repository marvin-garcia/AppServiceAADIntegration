{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "subscriptions_5d79d2399de6a80082070001_displayName": {
            "defaultValue": null,
            "type": "SecureString"
        },
        "subscriptions_5d79d23a9de6a80082070002_displayName": {
            "defaultValue": null,
            "type": "SecureString"
        },
        "users_1_lastName": {
            "defaultValue": null,
            "type": "SecureString"
        },
        "sites_backendappsvc_name": {
            "defaultValue": "backendappsvc",
            "type": "String"
        },
        "sites_frontentappsvc_name": {
            "defaultValue": "frontentappsvc",
            "type": "String"
        },
        "hostingEnvironments_ase_name": {
            "defaultValue": "ase",
            "type": "String"
        },
        "sites_backendfunctionapp_name": {
            "defaultValue": "backendfunctionapp",
            "type": "String"
        },
        "virtualMachines_Jumpbox_name": {
            "defaultValue": "Jumpbox",
            "type": "String"
        },
        "serverfarms_AuthN_AuthZ_Plan_name": {
            "defaultValue": "AuthN-AuthZ-Plan",
            "type": "String"
        },
        "service_authn_authz_name": {
            "defaultValue": "authn-authz",
            "type": "String"
        },
        "networkInterfaces_jumpbox476_name": {
            "defaultValue": "jumpbox476",
            "type": "String"
        },
        "publicIPAddresses_Jumpbox_ip_name": {
            "defaultValue": "Jumpbox-ip",
            "type": "String"
        },
        "components_AuthN_AuthZ_Insights_name": {
            "defaultValue": "AuthN-AuthZ-Insights",
            "type": "String"
        },
        "privateDnsZones_marvingarcia.xyz_name": {
            "defaultValue": "marvingarcia.xyz",
            "type": "String"
        },
        "virtualNetworks_AuthN_AuthZ_Vnet_name": {
            "defaultValue": "AuthN-AuthZ-Vnet",
            "type": "String"
        },
        "networkSecurityGroups_Jumpbox_nsg_name": {
            "defaultValue": "Jumpbox-nsg",
            "type": "String"
        },
        "publicIPAddresses_AuthN_AuthZ_IP_V2_name": {
            "defaultValue": "AuthN-AuthZ-IP-V2",
            "type": "String"
        },
        "storageAccounts_backendfunctiona03c_name": {
            "defaultValue": "backendfunctiona03c",
            "type": "String"
        },
        "applicationGateways_AuthN_AuthZ_Gateway_V2_name": {
            "defaultValue": "AuthN-AuthZ-Gateway-V2",
            "type": "String"
        },
        "privateDnsZones_ase.appserviceenvironment.net_name": {
            "defaultValue": "ase.appserviceenvironment.net",
            "type": "String"
        },
        "userAssignedIdentities_ManagedIdentity_name": {
            "defaultValue": "ManagedIdentity",
            "type": "String"
        },
        "certificates_MarvinGarciaXyz_AuthN_AuthZ_RG_aseappseSouthCentralUSwebspace_name": {
            "defaultValue": "MarvinGarciaXyz-AuthN-AuthZ-RG-aseappseSouthCentralUSwebspace",
            "type": "String"
        },
        "vaults_marvkeyvault_externalid": {
            "defaultValue": "/subscriptions/f0cf2edb-86a7-44b6-9c02-9c5fee5c618d/resourceGroups/marvrg/providers/microsoft.keyvault/vaults/marvkeyvault",
            "type": "String"
        }
    },
    "variables": {},
    "resources": [
        {
            "type": "Microsoft.ApiManagement/service",
            "apiVersion": "2019-01-01",
            "name": "[parameters('service_authn_authz_name')]",
            "location": "South Central US",
            "sku": {
                "name": "Developer",
                "capacity": 1
            },
            "properties": {
                "publisherEmail": "magar@microsoft.com",
                "publisherName": "Microsoft",
                "notificationSenderEmail": "apimgmt-noreply@mail.windowsazure.com",
                "hostnameConfigurations": [
                    {
                        "type": "Proxy",
                        "hostName": "[concat(parameters('service_authn_authz_name'), '.azure-api.net')]",
                        "negotiateClientCertificate": false,
                        "defaultSslBinding": true
                    }
                ],
                "customProperties": {
                    "Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Protocols.Tls10": "False",
                    "Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Protocols.Tls11": "False",
                    "Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Protocols.Ssl30": "False",
                    "Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Ciphers.TripleDes168": "False",
                    "Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Backend.Protocols.Tls10": "False",
                    "Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Backend.Protocols.Tls11": "False",
                    "Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Backend.Protocols.Ssl30": "False",
                    "Microsoft.WindowsAzure.ApiManagement.Gateway.Protocols.Server.Http2": "False"
                },
                "virtualNetworkType": "None"
            }
        },
        {
            "type": "microsoft.insights/components",
            "apiVersion": "2015-05-01",
            "name": "[parameters('components_AuthN_AuthZ_Insights_name')]",
            "location": "southcentralus",
            "kind": "web",
            "properties": {
                "Application_Type": "web",
                "Request_Source": "IbizaWebAppExtensionCreate"
            }
        },
        {
            "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
            "apiVersion": "2018-11-30",
            "name": "[parameters('userAssignedIdentities_ManagedIdentity_name')]",
            "location": "southcentralus",
            "properties": {
                "tenantId": "72f988bf-86f1-41af-91ab-2d7cd011db47",
                "principalId": "1778e115-c2a9-4e6a-9442-022c9019f7ff",
                "clientId": "3e66ec96-c19d-40e7-9a75-12199f31a360"
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2019-07-01",
            "name": "[parameters('networkSecurityGroups_Jumpbox_nsg_name')]",
            "location": "southcentralus",
            "properties": {
                "securityRules": [
                    {
                        "name": "RDP",
                        "properties": {
                            "protocol": "TCP",
                            "sourcePortRange": "*",
                            "destinationPortRange": "3389",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 1010,
                            "direction": "Inbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/privateDnsZones",
            "apiVersion": "2018-09-01",
            "name": "[parameters('privateDnsZones_ase.appserviceenvironment.net_name')]",
            "location": "global",
            "properties": {
                "maxNumberOfRecordSets": 25000,
                "maxNumberOfVirtualNetworkLinks": 1000,
                "maxNumberOfVirtualNetworkLinksWithRegistration": 100,
                "numberOfRecordSets": 10,
                "numberOfVirtualNetworkLinks": 0,
                "numberOfVirtualNetworkLinksWithRegistration": 0,
                "provisioningState": "Succeeded"
            }
        },
        {
            "type": "Microsoft.Network/privateDnsZones",
            "apiVersion": "2018-09-01",
            "name": "[parameters('privateDnsZones_marvingarcia.xyz_name')]",
            "location": "global",
            "properties": {
                "maxNumberOfRecordSets": 25000,
                "maxNumberOfVirtualNetworkLinks": 1000,
                "maxNumberOfVirtualNetworkLinksWithRegistration": 100,
                "numberOfRecordSets": 1,
                "numberOfVirtualNetworkLinks": 0,
                "numberOfVirtualNetworkLinksWithRegistration": 0,
                "provisioningState": "Succeeded"
            }
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2019-07-01",
            "name": "[parameters('publicIPAddresses_AuthN_AuthZ_IP_V2_name')]",
            "location": "southcentralus",
            "sku": {
                "name": "Standard",
                "tier": "Regional"
            },
            "properties": {
                "ipAddress": "13.66.85.182",
                "publicIPAddressVersion": "IPv4",
                "publicIPAllocationMethod": "Static",
                "idleTimeoutInMinutes": 4,
                "dnsSettings": {
                    "domainNameLabel": "authn-authz",
                    "fqdn": "authn-authz.southcentralus.cloudapp.azure.com"
                },
                "ipTags": []
            }
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2019-07-01",
            "name": "[parameters('publicIPAddresses_Jumpbox_ip_name')]",
            "location": "southcentralus",
            "sku": {
                "name": "Basic",
                "tier": "Regional"
            },
            "properties": {
                "ipAddress": "40.84.158.247",
                "publicIPAddressVersion": "IPv4",
                "publicIPAllocationMethod": "Dynamic",
                "idleTimeoutInMinutes": 4,
                "dnsSettings": {
                    "domainNameLabel": "asejumpbox",
                    "fqdn": "asejumpbox.southcentralus.cloudapp.azure.com"
                },
                "ipTags": []
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks",
            "apiVersion": "2019-07-01",
            "name": "[parameters('virtualNetworks_AuthN_AuthZ_Vnet_name')]",
            "location": "southcentralus",
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "10.0.0.0/16"
                    ]
                },
                "subnets": [
                    {
                        "name": "ASE",
                        "properties": {
                            "addressPrefix": "10.0.0.0/24",
                            "delegations": [],
                            "privateEndpointNetworkPolicies": "Enabled",
                            "privateLinkServiceNetworkPolicies": "Enabled"
                        }
                    },
                    {
                        "name": "GATEWAY",
                        "properties": {
                            "addressPrefix": "10.0.1.0/24",
                            "serviceEndpoints": [],
                            "delegations": [],
                            "privateEndpointNetworkPolicies": "Enabled",
                            "privateLinkServiceNetworkPolicies": "Enabled"
                        }
                    },
                    {
                        "name": "VMs",
                        "properties": {
                            "addressPrefix": "10.0.2.0/24",
                            "serviceEndpoints": [],
                            "delegations": [],
                            "privateEndpointNetworkPolicies": "Enabled",
                            "privateLinkServiceNetworkPolicies": "Enabled"
                        }
                    },
                    {
                        "name": "GATEWAY-V2",
                        "properties": {
                            "addressPrefix": "10.0.3.0/24",
                            "serviceEndpoints": [],
                            "delegations": [],
                            "privateEndpointNetworkPolicies": "Enabled",
                            "privateLinkServiceNetworkPolicies": "Enabled"
                        }
                    }
                ],
                "virtualNetworkPeerings": [],
                "enableDdosProtection": false,
                "enableVmProtection": false
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2019-04-01",
            "name": "[parameters('storageAccounts_backendfunctiona03c_name')]",
            "location": "southcentralus",
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            },
            "kind": "Storage",
            "properties": {
                "networkAcls": {
                    "bypass": "AzureServices",
                    "virtualNetworkRules": [],
                    "ipRules": [],
                    "defaultAction": "Allow"
                },
                "supportsHttpsTrafficOnly": false,
                "encryption": {
                    "services": {
                        "file": {
                            "enabled": true
                        },
                        "blob": {
                            "enabled": true
                        }
                    },
                    "keySource": "Microsoft.Storage"
                }
            }
        },
        {
            "type": "Microsoft.Web/certificates",
            "apiVersion": "2016-03-01",
            "name": "[parameters('certificates_MarvinGarciaXyz_AuthN_AuthZ_RG_aseappseSouthCentralUSwebspace_name')]",
            "location": "South Central US",
            "properties": {
                "hostNames": [
                    "*.marvingarcia.xyz",
                    "marvingarcia.xyz"
                ],
                "keyVaultId": "[parameters('vaults_marvkeyvault_externalid')]",
                "keyVaultSecretName": "marvingarciaxyz0fa2b228-955e-477d-9f1d-8dd7918293aa"
            }
        },
        {
            "type": "Microsoft.ApiManagement/service/apis",
            "apiVersion": "2019-01-01",
            "name": "[concat(parameters('service_authn_authz_name'), '/echo-api')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service', parameters('service_authn_authz_name'))]"
            ],
            "properties": {
                "displayName": "Echo API",
                "apiRevision": "1",
                "serviceUrl": "http://echoapi.cloudapp.net/api",
                "path": "echo",
                "protocols": [
                    "https"
                ],
                "isCurrent": true
            }
        },
        {
            "type": "Microsoft.ApiManagement/service/authorizationServers",
            "apiVersion": "2019-01-01",
            "name": "[concat(parameters('service_authn_authz_name'), '/backend-function-oauth')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service', parameters('service_authn_authz_name'))]"
            ],
            "properties": {
                "displayName": "Backend Function OAuth",
                "description": "Backend Function OAuth",
                "clientRegistrationEndpoint": "http://localhost",
                "authorizationEndpoint": "https://login.microsoftonline.com/6ffc77a4-d06d-49ce-93e8-ef7ba66c6937/oauth2/v2.0/authorize",
                "authorizationMethods": [
                    "GET",
                    "POST"
                ],
                "clientAuthenticationMethod": [
                    "Body"
                ],
                "tokenBodyParameters": [],
                "tokenEndpoint": "https://login.microsoftonline.com/6ffc77a4-d06d-49ce-93e8-ef7ba66c6937/oauth2/v2.0/token",
                "supportState": false,
                "defaultScope": "https://marvbackendapp.azurewebsites.net/api_read",
                "grantTypes": [
                    "authorizationCode"
                ],
                "bearerTokenSendingMethods": [
                    "authorizationHeader"
                ],
                "clientId": "598aa5e5-5d08-48b6-ac62-6467bfab5bd8",
                "clientSecret": "Zu?9_FwhJmGHtzy-bgILaIAxF-B2zE50"
            }
        },
        {
            "type": "Microsoft.ApiManagement/service/groups",
            "apiVersion": "2019-01-01",
            "name": "[concat(parameters('service_authn_authz_name'), '/administrators')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service', parameters('service_authn_authz_name'))]"
            ],
            "properties": {
                "displayName": "Administrators",
                "description": "Administrators is a built-in group. Its membership is managed by the system. Microsoft Azure subscription administrators fall into this group.",
                "type": "system"
            }
        },
        {
            "type": "Microsoft.ApiManagement/service/groups",
            "apiVersion": "2019-01-01",
            "name": "[concat(parameters('service_authn_authz_name'), '/developers')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service', parameters('service_authn_authz_name'))]"
            ],
            "properties": {
                "displayName": "Developers",
                "description": "Developers is a built-in group. Its membership is managed by the system. Signed-in users fall into this group.",
                "type": "system"
            }
        },
        {
            "type": "Microsoft.ApiManagement/service/groups",
            "apiVersion": "2019-01-01",
            "name": "[concat(parameters('service_authn_authz_name'), '/guests')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service', parameters('service_authn_authz_name'))]"
            ],
            "properties": {
                "displayName": "Guests",
                "description": "Guests is a built-in group. Its membership is managed by the system. Unauthenticated users visiting the developer portal fall into this group.",
                "type": "system"
            }
        },
        {
            "type": "Microsoft.ApiManagement/service/notifications",
            "apiVersion": "2019-01-01",
            "name": "[concat(parameters('service_authn_authz_name'), '/AccountClosedPublisher')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service', parameters('service_authn_authz_name'))]"
            ],
            "properties": {
                "title": "Close account message",
                "description": "The following email recipients and users will receive email notifications when developer closes his account",
                "recipients": {
                    "emails": [],
                    "users": []
                }
            }
        },
        {
            "type": "Microsoft.ApiManagement/service/notifications",
            "apiVersion": "2019-01-01",
            "name": "[concat(parameters('service_authn_authz_name'), '/BCC')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service', parameters('service_authn_authz_name'))]"
            ],
            "properties": {
                "title": "BCC",
                "description": "The following recipients will receive blind carbon copies of all emails sent to developers.",
                "recipients": {
                    "emails": [],
                    "users": []
                }
            }
        },
        {
            "type": "Microsoft.ApiManagement/service/notifications",
            "apiVersion": "2019-01-01",
            "name": "[concat(parameters('service_authn_authz_name'), '/NewApplicationNotificationMessage')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service', parameters('service_authn_authz_name'))]"
            ],
            "properties": {
                "title": "Application gallery requests",
                "description": "The following email recipients and users will receive email notifications when new applications are submitted to the application gallery.",
                "recipients": {
                    "emails": [],
                    "users": []
                }
            }
        },
        {
            "type": "Microsoft.ApiManagement/service/notifications",
            "apiVersion": "2019-01-01",
            "name": "[concat(parameters('service_authn_authz_name'), '/NewIssuePublisherNotificationMessage')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service', parameters('service_authn_authz_name'))]"
            ],
            "properties": {
                "title": "New issue or comment",
                "description": "The following email recipients and users will receive email notifications when a new issue or comment is submitted on the developer portal.",
                "recipients": {
                    "emails": [],
                    "users": []
                }
            }
        },
        {
            "type": "Microsoft.ApiManagement/service/notifications",
            "apiVersion": "2019-01-01",
            "name": "[concat(parameters('service_authn_authz_name'), '/PurchasePublisherNotificationMessage')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service', parameters('service_authn_authz_name'))]"
            ],
            "properties": {
                "title": "New subscriptions",
                "description": "The following email recipients and users will receive email notifications about new API product subscriptions.",
                "recipients": {
                    "emails": [],
                    "users": []
                }
            }
        },
        {
            "type": "Microsoft.ApiManagement/service/notifications",
            "apiVersion": "2019-01-01",
            "name": "[concat(parameters('service_authn_authz_name'), '/QuotaLimitApproachingPublisherNotificationMessage')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service', parameters('service_authn_authz_name'))]"
            ],
            "properties": {
                "title": "Approaching subscription quota limit",
                "description": "The following email recipients and users will receive email notifications when subscription usage gets close to usage quota.",
                "recipients": {
                    "emails": [],
                    "users": []
                }
            }
        },
        {
            "type": "Microsoft.ApiManagement/service/notifications",
            "apiVersion": "2019-01-01",
            "name": "[concat(parameters('service_authn_authz_name'), '/RequestPublisherNotificationMessage')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service', parameters('service_authn_authz_name'))]"
            ],
            "properties": {
                "title": "Subscription requests (requiring approval)",
                "description": "The following email recipients and users will receive email notifications about subscription requests for API products requiring approval.",
                "recipients": {
                    "emails": [],
                    "users": []
                }
            }
        },
        {
            "type": "Microsoft.ApiManagement/service/policies",
            "apiVersion": "2019-01-01",
            "name": "[concat(parameters('service_authn_authz_name'), '/policy')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service', parameters('service_authn_authz_name'))]"
            ],
            "properties": {
                "value": "<!--\r\n    IMPORTANT:\r\n    - Policy elements can appear only within the <inbound>, <outbound>, <backend> section elements.\r\n    - Only the <forward-request> policy element can appear within the <backend> section element.\r\n    - To apply a policy to the incoming request (before it is forwarded to the backend service), place a corresponding policy element within the <inbound> section element.\r\n    - To apply a policy to the outgoing response (before it is sent back to the caller), place a corresponding policy element within the <outbound> section element.\r\n    - To add a policy position the cursor at the desired insertion point and click on the round button associated with the policy.\r\n    - To remove a policy, delete the corresponding policy statement from the policy document.\r\n    - Policies are applied in the order of their appearance, from the top down.\r\n-->\r\n<policies>\r\n  <inbound />\r\n  <backend>\r\n    <forward-request />\r\n  </backend>\r\n  <outbound />\r\n</policies>",
                "format": "xml"
            }
        },
        {
            "type": "Microsoft.ApiManagement/service/products",
            "apiVersion": "2019-01-01",
            "name": "[concat(parameters('service_authn_authz_name'), '/starter')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service', parameters('service_authn_authz_name'))]"
            ],
            "properties": {
                "displayName": "Starter",
                "description": "Subscribers will be able to run 5 calls/minute up to a maximum of 100 calls/week.",
                "subscriptionRequired": true,
                "approvalRequired": false,
                "subscriptionsLimit": 1,
                "state": "published"
            }
        },
        {
            "type": "Microsoft.ApiManagement/service/products",
            "apiVersion": "2019-01-01",
            "name": "[concat(parameters('service_authn_authz_name'), '/unlimited')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service', parameters('service_authn_authz_name'))]"
            ],
            "properties": {
                "displayName": "Unlimited",
                "description": "Subscribers have completely unlimited access to the API. Administrator approval is required.",
                "subscriptionRequired": true,
                "approvalRequired": true,
                "subscriptionsLimit": 1,
                "state": "published"
            }
        },
        {
            "type": "Microsoft.ApiManagement/service/properties",
            "apiVersion": "2019-01-01",
            "name": "[concat(parameters('service_authn_authz_name'), '/5d79d8f7f51c850184caa2d1')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service', parameters('service_authn_authz_name'))]"
            ],
            "properties": {
                "displayName": "Logger-Credentials-5d79d8f7f51c850184caa2d2",
                "value": "a414f7c3-4d47-46c4-812c-1c8d23ed2c2a",
                "secret": true
            }
        },
        {
            "type": "Microsoft.ApiManagement/service/subscriptions",
            "apiVersion": "2019-01-01",
            "name": "[concat(parameters('service_authn_authz_name'), '/master')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service', parameters('service_authn_authz_name'))]"
            ],
            "properties": {
                "scope": "[concat(resourceId('Microsoft.ApiManagement/service', parameters('service_authn_authz_name')), '/')]",
                "displayName": "Built-in all-access subscription",
                "state": "active",
                "primaryKey": "f2beb609b98949399a1597c64e937c02",
                "secondaryKey": "8aad3fcfeb574406a912b2e41b5c24ef",
                "allowTracing": true
            }
        },
        {
            "type": "Microsoft.ApiManagement/service/templates",
            "apiVersion": "2019-01-01",
            "name": "[concat(parameters('service_authn_authz_name'), '/AccountClosedDeveloper')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service', parameters('service_authn_authz_name'))]"
            ],
            "properties": {
                "subject": "Thank you for using the $OrganizationName API!",
                "body": "<!DOCTYPE html >\r\n<html>\r\n  <head />\r\n  <body>\r\n    <p style=\"font-size:12pt;font-family:'Segoe UI'\">Dear $DevFirstName $DevLastName,</p>\r\n    <p style=\"font-size:12pt;font-family:'Segoe UI'\">\r\n          On behalf of $OrganizationName and our customers we thank you for giving us a try. Your $OrganizationName API account is now closed.\r\n        </p>\r\n    <p style=\"font-size:12pt;font-family:'Segoe UI'\">Thank you,</p>\r\n    <p style=\"font-size:12pt;font-family:'Segoe UI'\">Your $OrganizationName Team</p>\r\n    <a href=\"$DevPortalUrl\">$DevPortalUrl</a>\r\n    <p />\r\n  </body>\r\n</html>",
                "title": "Developer farewell letter",
                "description": "Developers receive this farewell email after they close their account.",
                "parameters": [
                    {
                        "name": "DevFirstName",
                        "title": "Developer first name"
                    },
                    {
                        "name": "DevLastName",
                        "title": "Developer last name"
                    },
                    {
                        "name": "OrganizationName",
                        "title": "Organization name"
                    },
                    {
                        "name": "DevPortalUrl",
                        "title": "Developer portal URL"
                    }
                ]
            }
        },
        {
            "type": "Microsoft.ApiManagement/service/templates",
            "apiVersion": "2019-01-01",
            "name": "[concat(parameters('service_authn_authz_name'), '/ApplicationApprovedNotificationMessage')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service', parameters('service_authn_authz_name'))]"
            ],
            "properties": {
                "subject": "Your application $AppName is published in the application gallery",
                "body": "<!DOCTYPE html >\r\n<html>\r\n  <head />\r\n  <body>\r\n    <p style=\"font-size:12pt;font-family:'Segoe UI'\">Dear $DevFirstName $DevLastName,</p>\r\n    <p style=\"font-size:12pt;font-family:'Segoe UI'\">\r\n          We are happy to let you know that your request to publish the $AppName application in the application gallery has been approved. Your application has been published and can be viewed <a href=\"http://$DevPortalUrl/Applications/Details/$AppId\">here</a>.\r\n        </p>\r\n    <p style=\"font-size:12pt;font-family:'Segoe UI'\">Best,</p>\r\n    <p style=\"font-size:12pt;font-family:'Segoe UI'\">The $OrganizationName API Team</p>\r\n  </body>\r\n</html>",
                "title": "Application gallery submission approved",
                "description": "Developers who submitted their application for publication in the application gallery on the developer portal receive this email after their submission is approved.",
                "parameters": [
                    {
                        "name": "AppId",
                        "title": "Application id"
                    },
                    {
                        "name": "AppName",
                        "title": "Application name"
                    },
                    {
                        "name": "DevFirstName",
                        "title": "Developer first name"
                    },
                    {
                        "name": "DevLastName",
                        "title": "Developer last name"
                    },
                    {
                        "name": "OrganizationName",
                        "title": "Organization name"
                    },
                    {
                        "name": "DevPortalUrl",
                        "title": "Developer portal URL"
                    }
                ]
            }
        },
        {
            "type": "Microsoft.ApiManagement/service/templates",
            "apiVersion": "2019-01-01",
            "name": "[concat(parameters('service_authn_authz_name'), '/ConfirmSignUpIdentityDefault')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service', parameters('service_authn_authz_name'))]"
            ],
            "properties": {
                "subject": "Please confirm your new $OrganizationName API account",
                "body": "<!DOCTYPE html >\r\n<html>\r\n  <head>\r\n    <meta charset=\"UTF-8\" />\r\n    <title>Letter</title>\r\n  </head>\r\n  <body>\r\n    <table width=\"100%\">\r\n      <tr>\r\n        <td>\r\n          <p style=\"font-size:12pt;font-family:'Segoe UI'\">Dear $DevFirstName $DevLastName,</p>\r\n          <p style=\"font-size:12pt;font-family:'Segoe UI'\"></p>\r\n          <p style=\"font-size:12pt;font-family:'Segoe UI'\">Thank you for joining the $OrganizationName API program! We host a growing number of cool APIs and strive to provide an awesome experience for API developers.</p>\r\n          <p style=\"font-size:12pt;font-family:'Segoe UI'\">First order of business is to activate your account and get you going. To that end, please click on the following link:</p>\r\n          <p style=\"font-size:12pt;font-family:'Segoe UI'\">\r\n            <a id=\"confirmUrl\" href=\"$ConfirmUrl\" style=\"text-decoration:none\">\r\n              <strong>$ConfirmUrl</strong>\r\n            </a>\r\n          </p>\r\n          <p style=\"font-size:12pt;font-family:'Segoe UI'\">If clicking the link does not work, please copy-and-paste or re-type it into your browser's address bar and hit \"Enter\".</p>\r\n          <p style=\"font-size:12pt;font-family:'Segoe UI'\">Thank you,</p>\r\n          <p style=\"font-size:12pt;font-family:'Segoe UI'\">$OrganizationName API Team</p>\r\n          <p style=\"font-size:12pt;font-family:'Segoe UI'\">\r\n            <a href=\"$DevPortalUrl\">$DevPortalUrl</a>\r\n          </p>\r\n        </td>\r\n      </tr>\r\n    </table>\r\n  </body>\r\n</html>",
                "title": "New developer account confirmation",
                "description": "Developers receive this email to confirm their e-mail address after they sign up for a new account.",
                "parameters": [
                    {
                        "name": "DevFirstName",
                        "title": "Developer first name"
                    },
                    {
                        "name": "DevLastName",
                        "title": "Developer last name"
                    },
                    {
                        "name": "OrganizationName",
                        "title": "Organization name"
                    },
                    {
                        "name": "DevPortalUrl",
                        "title": "Developer portal URL"
                    },
                    {
                        "name": "ConfirmUrl",
                        "title": "Developer activation URL"
                    },
                    {
                        "name": "DevPortalHost",
                        "title": "Developer portal hostname"
                    },
                    {
                        "name": "ConfirmQuery",
                        "title": "Query string part of the activation URL"
                    }
                ]
            }
        },
        {
            "type": "Microsoft.ApiManagement/service/templates",
            "apiVersion": "2019-01-01",
            "name": "[concat(parameters('service_authn_authz_name'), '/EmailChangeIdentityDefault')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service', parameters('service_authn_authz_name'))]"
            ],
            "properties": {
                "subject": "Please confirm the new email associated with your $OrganizationName API account",
                "body": "<!DOCTYPE html >\r\n<html>\r\n  <head>\r\n    <meta charset=\"UTF-8\" />\r\n    <title>Letter</title>\r\n  </head>\r\n  <body>\r\n    <table width=\"100%\">\r\n      <tr>\r\n        <td>\r\n          <p style=\"font-size:12pt;font-family:'Segoe UI'\">Dear $DevFirstName $DevLastName,</p>\r\n          <p style=\"font-size:12pt;font-family:'Segoe UI'\"></p>\r\n          <p style=\"font-size:12pt;font-family:'Segoe UI'\">You are receiving this email because you made a change to the email address on your $OrganizationName API account.</p>\r\n          <p style=\"font-size:12pt;font-family:'Segoe UI'\">Please click on the following link to confirm the change:</p>\r\n          <p style=\"font-size:12pt;font-family:'Segoe UI'\">\r\n            <a id=\"confirmUrl\" href=\"$ConfirmUrl\" style=\"text-decoration:none\">\r\n              <strong>$ConfirmUrl</strong>\r\n            </a>\r\n          </p>\r\n          <p style=\"font-size:12pt;font-family:'Segoe UI'\">If clicking the link does not work, please copy-and-paste or re-type it into your browser's address bar and hit \"Enter\".</p>\r\n          <p style=\"font-size:12pt;font-family:'Segoe UI'\">Thank you,</p>\r\n          <p style=\"font-size:12pt;font-family:'Segoe UI'\">$OrganizationName API Team</p>\r\n          <p style=\"font-size:12pt;font-family:'Segoe UI'\">\r\n            <a href=\"$DevPortalUrl\">$DevPortalUrl</a>\r\n          </p>\r\n        </td>\r\n      </tr>\r\n    </table>\r\n  </body>\r\n</html>",
                "title": "Email change confirmation",
                "description": "Developers receive this email to confirm a new e-mail address after they change their existing one associated with their account.",
                "parameters": [
                    {
                        "name": "DevFirstName",
                        "title": "Developer first name"
                    },
                    {
                        "name": "DevLastName",
                        "title": "Developer last name"
                    },
                    {
                        "name": "OrganizationName",
                        "title": "Organization name"
                    },
                    {
                        "name": "DevPortalUrl",
                        "title": "Developer portal URL"
                    },
                    {
                        "name": "ConfirmUrl",
                        "title": "Developer confirmation URL"
                    },
                    {
                        "name": "DevPortalHost",
                        "title": "Developer portal hostname"
                    },
                    {
                        "name": "ConfirmQuery",
                        "title": "Query string part of the confirmation URL"
                    }
                ]
            }
        },
        {
            "type": "Microsoft.ApiManagement/service/templates",
            "apiVersion": "2019-01-01",
            "name": "[concat(parameters('service_authn_authz_name'), '/InviteUserNotificationMessage')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service', parameters('service_authn_authz_name'))]"
            ],
            "properties": {
                "subject": "You are invited to join the $OrganizationName developer network",
                "body": "<!DOCTYPE html >\r\n<html>\r\n  <head />\r\n  <body>\r\n    <p style=\"font-size:12pt;font-family:'Segoe UI'\">Dear $DevFirstName $DevLastName,</p>\r\n    <p style=\"font-size:12pt;font-family:'Segoe UI'\">\r\n          Your account has been created. Please follow the link below to visit the $OrganizationName developer portal and claim it:\r\n        </p>\r\n    <p style=\"font-size:12pt;font-family:'Segoe UI'\">\r\n      <a href=\"$ConfirmUrl\">$ConfirmUrl</a>\r\n    </p>\r\n    <p style=\"font-size:12pt;font-family:'Segoe UI'\">Best,</p>\r\n    <p style=\"font-size:12pt;font-family:'Segoe UI'\">The $OrganizationName API Team</p>\r\n  </body>\r\n</html>",
                "title": "Invite user",
                "description": "An e-mail invitation to create an account, sent on request by API publishers.",
                "parameters": [
                    {
                        "name": "OrganizationName",
                        "title": "Organization name"
                    },
                    {
                        "name": "DevFirstName",
                        "title": "Developer first name"
                    },
                    {
                        "name": "DevLastName",
                        "title": "Developer last name"
                    },
                    {
                        "name": "ConfirmUrl",
                        "title": "Confirmation link"
                    },
                    {
                        "name": "DevPortalHost",
                        "title": "Developer portal hostname"
                    },
                    {
                        "name": "ConfirmQuery",
                        "title": "Query string part of the confirmation link"
                    }
                ]
            }
        },
        {
            "type": "Microsoft.ApiManagement/service/templates",
            "apiVersion": "2019-01-01",
            "name": "[concat(parameters('service_authn_authz_name'), '/NewCommentNotificationMessage')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service', parameters('service_authn_authz_name'))]"
            ],
            "properties": {
                "subject": "$IssueName issue has a new comment",
                "body": "<!DOCTYPE html >\r\n<html>\r\n  <head />\r\n  <body>\r\n    <p style=\"font-size:12pt;font-family:'Segoe UI'\">Dear $DevFirstName $DevLastName,</p>\r\n    <p style=\"font-size:12pt;font-family:'Segoe UI'\">This is a brief note to let you know that $CommenterFirstName $CommenterLastName made the following comment on the issue $IssueName you created:</p>\r\n    <p style=\"font-size:12pt;font-family:'Segoe UI'\">$CommentText</p>\r\n    <p style=\"font-size:12pt;font-family:'Segoe UI'\">\r\n          To view the issue on the developer portal click <a href=\"http://$DevPortalUrl/issues/$IssueId\">here</a>.\r\n        </p>\r\n    <p style=\"font-size:12pt;font-family:'Segoe UI'\">Best,</p>\r\n    <p style=\"font-size:12pt;font-family:'Segoe UI'\">The $OrganizationName API Team</p>\r\n  </body>\r\n</html>",
                "title": "New comment added to an issue",
                "description": "Developers receive this email when someone comments on the issue they created on the Issues page of the developer portal.",
                "parameters": [
                    {
                        "name": "DevFirstName",
                        "title": "Developer first name"
                    },
                    {
                        "name": "DevLastName",
                        "title": "Developer last name"
                    },
                    {
                        "name": "CommenterFirstName",
                        "title": "Commenter first name"
                    },
                    {
                        "name": "CommenterLastName",
                        "title": "Commenter last name"
                    },
                    {
                        "name": "IssueId",
                        "title": "Issue id"
                    },
                    {
                        "name": "IssueName",
                        "title": "Issue name"
                    },
                    {
                        "name": "CommentText",
                        "title": "Comment text"
                    },
                    {
                        "name": "OrganizationName",
                        "title": "Organization name"
                    },
                    {
                        "name": "DevPortalUrl",
                        "title": "Developer portal URL"
                    }
                ]
            }
        },
        {
            "type": "Microsoft.ApiManagement/service/templates",
            "apiVersion": "2019-01-01",
            "name": "[concat(parameters('service_authn_authz_name'), '/NewDeveloperNotificationMessage')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service', parameters('service_authn_authz_name'))]"
            ],
            "properties": {
                "subject": "Welcome to the $OrganizationName API!",
                "body": "<!DOCTYPE html >\r\n<html>\r\n  <head>\r\n    <meta charset=\"UTF-8\" />\r\n    <title>Letter</title>\r\n  </head>\r\n  <body>\r\n    <h1 style=\"color:#000505;font-size:18pt;font-family:'Segoe UI'\">\r\n          Welcome to <span style=\"color:#003363\">$OrganizationName API!</span></h1>\r\n    <p style=\"font-size:12pt;font-family:'Segoe UI'\">Dear $DevFirstName $DevLastName,</p>\r\n    <p style=\"font-size:12pt;font-family:'Segoe UI'\">Your $OrganizationName API program registration is completed and we are thrilled to have you as a customer. Here are a few important bits of information for your reference:</p>\r\n    <table width=\"100%\" style=\"margin:20px 0\">\r\n      <tr>\r\n            #if ($IdentityProvider == \"Basic\")\r\n            <td width=\"50%\" style=\"height:40px;vertical-align:top;font-family:'Segoe UI';font-size:12pt\">\r\n              Please use the following <strong>username</strong> when signing into any of the ${OrganizationName}-hosted developer portals:\r\n            </td><td style=\"vertical-align:top;font-family:'Segoe UI';font-size:12pt\"><strong>$DevUsername</strong></td>\r\n            #else\r\n            <td width=\"50%\" style=\"height:40px;vertical-align:top;font-family:'Segoe UI';font-size:12pt\">\r\n              Please use the following <strong>$IdentityProvider account</strong> when signing into any of the ${OrganizationName}-hosted developer portals:\r\n            </td><td style=\"vertical-align:top;font-family:'Segoe UI';font-size:12pt\"><strong>$DevUsername</strong></td>            \r\n            #end\r\n          </tr>\r\n      <tr>\r\n        <td style=\"height:40px;vertical-align:top;font-family:'Segoe UI';font-size:12pt\">\r\n              We will direct all communications to the following <strong>email address</strong>:\r\n            </td>\r\n        <td style=\"vertical-align:top;font-family:'Segoe UI';font-size:12pt\">\r\n          <a href=\"mailto:$DevEmail\" style=\"text-decoration:none\">\r\n            <strong>$DevEmail</strong>\r\n          </a>\r\n        </td>\r\n      </tr>\r\n    </table>\r\n    <p style=\"font-size:12pt;font-family:'Segoe UI'\">Best of luck in your API pursuits!</p>\r\n    <p style=\"font-size:12pt;font-family:'Segoe UI'\">$OrganizationName API Team</p>\r\n    <p style=\"font-size:12pt;font-family:'Segoe UI'\">\r\n      <a href=\"http://$DevPortalUrl\">$DevPortalUrl</a>\r\n    </p>\r\n  </body>\r\n</html>",
                "title": "Developer welcome letter",
                "description": "Developers receive this “welcome” email after they confirm their new account.",
                "parameters": [
                    {
                        "name": "DevFirstName",
                        "title": "Developer first name"
                    },
                    {
                        "name": "DevLastName",
                        "title": "Developer last name"
                    },
                    {
                        "name": "DevUsername",
                        "title": "Developer user name"
                    },
                    {
                        "name": "DevEmail",
                        "title": "Developer email"
                    },
                    {
                        "name": "OrganizationName",
                        "title": "Organization name"
                    },
                    {
                        "name": "DevPortalUrl",
                        "title": "Developer portal URL"
                    },
                    {
                        "name": "IdentityProvider",
                        "title": "Identity Provider selected by Organization"
                    }
                ]
            }
        },
        {
            "type": "Microsoft.ApiManagement/service/templates",
            "apiVersion": "2019-01-01",
            "name": "[concat(parameters('service_authn_authz_name'), '/NewIssueNotificationMessage')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service', parameters('service_authn_authz_name'))]"
            ],
            "properties": {
                "subject": "Your request $IssueName was received",
                "body": "<!DOCTYPE html >\r\n<html>\r\n  <head />\r\n  <body>\r\n    <p style=\"font-size:12pt;font-family:'Segoe UI'\">Dear $DevFirstName $DevLastName,</p>\r\n    <p style=\"font-size:12pt;font-family:'Segoe UI'\">Thank you for contacting us. Our API team will review your issue and get back to you soon.</p>\r\n    <p style=\"font-size:12pt;font-family:'Segoe UI'\">\r\n          Click this <a href=\"http://$DevPortalUrl/issues/$IssueId\">link</a> to view or edit your request.\r\n        </p>\r\n    <p style=\"font-size:12pt;font-family:'Segoe UI'\">Best,</p>\r\n    <p style=\"font-size:12pt;font-family:'Segoe UI'\">The $OrganizationName API Team</p>\r\n  </body>\r\n</html>",
                "title": "New issue received",
                "description": "This email is sent to developers after they create a new topic on the Issues page of the developer portal.",
                "parameters": [
                    {
                        "name": "DevFirstName",
                        "title": "Developer first name"
                    },
                    {
                        "name": "DevLastName",
                        "title": "Developer last name"
                    },
                    {
                        "name": "IssueId",
                        "title": "Issue id"
                    },
                    {
                        "name": "IssueName",
                        "title": "Issue name"
                    },
                    {
                        "name": "OrganizationName",
                        "title": "Organization name"
                    },
                    {
                        "name": "DevPortalUrl",
                        "title": "Developer portal URL"
                    }
                ]
            }
        },
        {
            "type": "Microsoft.ApiManagement/service/templates",
            "apiVersion": "2019-01-01",
            "name": "[concat(parameters('service_authn_authz_name'), '/PasswordResetByAdminNotificationMessage')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service', parameters('service_authn_authz_name'))]"
            ],
            "properties": {
                "subject": "Your password was reset",
                "body": "<!DOCTYPE html >\r\n<html>\r\n  <head />\r\n  <body>\r\n    <table width=\"100%\">\r\n      <tr>\r\n        <td>\r\n          <p style=\"font-size:12pt;font-family:'Segoe UI'\">Dear $DevFirstName $DevLastName,</p>\r\n          <p style=\"font-size:12pt;font-family:'Segoe UI'\"></p>\r\n          <p style=\"font-size:12pt;font-family:'Segoe UI'\">The password of your $OrganizationName API account has been reset, per your request.</p>\r\n          <p style=\"font-size:12pt;font-family:'Segoe UI'\">\r\n                Your new password is: <strong>$DevPassword</strong></p>\r\n          <p style=\"font-size:12pt;font-family:'Segoe UI'\">Please make sure to change it next time you sign in.</p>\r\n          <p style=\"font-size:12pt;font-family:'Segoe UI'\">Thank you,</p>\r\n          <p style=\"font-size:12pt;font-family:'Segoe UI'\">$OrganizationName API Team</p>\r\n          <p style=\"font-size:12pt;font-family:'Segoe UI'\">\r\n            <a href=\"$DevPortalUrl\">$DevPortalUrl</a>\r\n          </p>\r\n        </td>\r\n      </tr>\r\n    </table>\r\n  </body>\r\n</html>",
                "title": "Password reset by publisher notification (Password reset by admin)",
                "description": "Developers receive this email when the publisher resets their password.",
                "parameters": [
                    {
                        "name": "DevFirstName",
                        "title": "Developer first name"
                    },
                    {
                        "name": "DevLastName",
                        "title": "Developer last name"
                    },
                    {
                        "name": "DevPassword",
                        "title": "New Developer password"
                    },
                    {
                        "name": "OrganizationName",
                        "title": "Organization name"
                    },
                    {
                        "name": "DevPortalUrl",
                        "title": "Developer portal URL"
                    }
                ]
            }
        },
        {
            "type": "Microsoft.ApiManagement/service/templates",
            "apiVersion": "2019-01-01",
            "name": "[concat(parameters('service_authn_authz_name'), '/PasswordResetIdentityDefault')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service', parameters('service_authn_authz_name'))]"
            ],
            "properties": {
                "subject": "Your password change request",
                "body": "<!DOCTYPE html >\r\n<html>\r\n  <head>\r\n    <meta charset=\"UTF-8\" />\r\n    <title>Letter</title>\r\n  </head>\r\n  <body>\r\n    <table width=\"100%\">\r\n      <tr>\r\n        <td>\r\n          <p style=\"font-size:12pt;font-family:'Segoe UI'\">Dear $DevFirstName $DevLastName,</p>\r\n          <p style=\"font-size:12pt;font-family:'Segoe UI'\"></p>\r\n          <p style=\"font-size:12pt;font-family:'Segoe UI'\">You are receiving this email because you requested to change the password on your $OrganizationName API account.</p>\r\n          <p style=\"font-size:12pt;font-family:'Segoe UI'\">Please click on the link below and follow instructions to create your new password:</p>\r\n          <p style=\"font-size:12pt;font-family:'Segoe UI'\">\r\n            <a id=\"resetUrl\" href=\"$ConfirmUrl\" style=\"text-decoration:none\">\r\n              <strong>$ConfirmUrl</strong>\r\n            </a>\r\n          </p>\r\n          <p style=\"font-size:12pt;font-family:'Segoe UI'\">If clicking the link does not work, please copy-and-paste or re-type it into your browser's address bar and hit \"Enter\".</p>\r\n          <p style=\"font-size:12pt;font-family:'Segoe UI'\">Thank you,</p>\r\n          <p style=\"font-size:12pt;font-family:'Segoe UI'\">$OrganizationName API Team</p>\r\n          <p style=\"font-size:12pt;font-family:'Segoe UI'\">\r\n            <a href=\"$DevPortalUrl\">$DevPortalUrl</a>\r\n          </p>\r\n        </td>\r\n      </tr>\r\n    </table>\r\n  </body>\r\n</html>",
                "title": "Password change confirmation",
                "description": "Developers receive this email when they request a password change of their account. The purpose of the email is to verify that the account owner made the request and to provide a one-time perishable URL for changing the password.",
                "parameters": [
                    {
                        "name": "DevFirstName",
                        "title": "Developer first name"
                    },
                    {
                        "name": "DevLastName",
                        "title": "Developer last name"
                    },
                    {
                        "name": "OrganizationName",
                        "title": "Organization name"
                    },
                    {
                        "name": "DevPortalUrl",
                        "title": "Developer portal URL"
                    },
                    {
                        "name": "ConfirmUrl",
                        "title": "Developer new password instruction URL"
                    },
                    {
                        "name": "DevPortalHost",
                        "title": "Developer portal hostname"
                    },
                    {
                        "name": "ConfirmQuery",
                        "title": "Query string part of the instruction URL"
                    }
                ]
            }
        },
        {
            "type": "Microsoft.ApiManagement/service/templates",
            "apiVersion": "2019-01-01",
            "name": "[concat(parameters('service_authn_authz_name'), '/PurchaseDeveloperNotificationMessage')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service', parameters('service_authn_authz_name'))]"
            ],
            "properties": {
                "subject": "Your subscription to the $ProdName",
                "body": "<!DOCTYPE html >\r\n<html>\r\n  <head />\r\n  <body>\r\n    <p style=\"font-size:12pt;font-family:'Segoe UI'\">Greetings $DevFirstName $DevLastName!</p>\r\n    <p style=\"font-size:12pt;font-family:'Segoe UI'\">\r\n          Thank you for subscribing to the <a href=\"http://$DevPortalUrl/products/$ProdId\"><strong>$ProdName</strong></a> and welcome to the $OrganizationName developer community. We are delighted to have you as part of the team and are looking forward to the amazing applications you will build using our API!\r\n        </p>\r\n    <p style=\"font-size:12pt;font-family:'Segoe UI'\">Below are a few subscription details for your reference:</p>\r\n    <p style=\"font-size:12pt;font-family:'Segoe UI'\">\r\n      <ul>\r\n            #if ($SubStartDate != \"\")\r\n            <li style=\"font-size:12pt;font-family:'Segoe UI'\">Start date: $SubStartDate</li>\r\n            #end\r\n            \r\n            #if ($SubTerm != \"\")\r\n            <li style=\"font-size:12pt;font-family:'Segoe UI'\">Subscription term: $SubTerm</li>\r\n            #end\r\n          </ul>\r\n    </p>\r\n    <p style=\"font-size:12pt;font-family:'Segoe UI'\">\r\n            Visit the developer <a href=\"http://$DevPortalUrl/developer\">profile area</a> to manage your subscription and subscription keys\r\n        </p>\r\n    <p style=\"font-size:12pt;font-family:'Segoe UI'\">A couple of pointers to help get you started:</p>\r\n    <p style=\"font-size:12pt;font-family:'Segoe UI'\">\r\n      <strong>\r\n        <a href=\"http://$DevPortalUrl/docs/services?product=$ProdId\">Learn about the API</a>\r\n      </strong>\r\n    </p>\r\n    <p style=\"font-size:12pt;font-family:'Segoe UI'\">The API documentation provides all information necessary to make a request and to process a response. Code samples are provided per API operation in a variety of languages. Moreover, an interactive console allows making API calls directly from the developer portal without writing any code.</p>\r\n    <p style=\"font-size:12pt;font-family:'Segoe UI'\">\r\n      <strong>\r\n        <a href=\"http://$DevPortalUrl/applications\">Feature your app in the app gallery</a>\r\n      </strong>\r\n    </p>\r\n    <p style=\"font-size:12pt;font-family:'Segoe UI'\">You can publish your application on our gallery for increased visibility to potential new users.</p>\r\n    <p style=\"font-size:12pt;font-family:'Segoe UI'\">\r\n      <strong>\r\n        <a href=\"http://$DevPortalUrl/issues\">Stay in touch</a>\r\n      </strong>\r\n    </p>\r\n    <p style=\"font-size:12pt;font-family:'Segoe UI'\">\r\n          If you have an issue, a question, a suggestion, a request, or if you just want to tell us something, go to the <a href=\"http://$DevPortalUrl/issues\">Issues</a> page on the developer portal and create a new topic.\r\n        </p>\r\n    <p style=\"font-size:12pt;font-family:'Segoe UI'\">Happy hacking,</p>\r\n    <p style=\"font-size:12pt;font-family:'Segoe UI'\">The $OrganizationName API Team</p>\r\n    <a style=\"font-size:12pt;font-family:'Segoe UI'\" href=\"http://$DevPortalUrl\">$DevPortalUrl</a>\r\n  </body>\r\n</html>",
                "title": "New subscription activated",
                "description": "Developers receive this acknowledgement email after subscribing to a product.",
                "parameters": [
                    {
                        "name": "DevFirstName",
                        "title": "Developer first name"
                    },
                    {
                        "name": "DevLastName",
                        "title": "Developer last name"
                    },
                    {
                        "name": "ProdId",
                        "title": "Product ID"
                    },
                    {
                        "name": "ProdName",
                        "title": "Product name"
                    },
                    {
                        "name": "OrganizationName",
                        "title": "Organization name"
                    },
                    {
                        "name": "SubStartDate",
                        "title": "Subscription start date"
                    },
                    {
                        "name": "SubTerm",
                        "title": "Subscription term"
                    },
                    {
                        "name": "DevPortalUrl",
                        "title": "Developer portal URL"
                    }
                ]
            }
        },
        {
            "type": "Microsoft.ApiManagement/service/templates",
            "apiVersion": "2019-01-01",
            "name": "[concat(parameters('service_authn_authz_name'), '/QuotaLimitApproachingDeveloperNotificationMessage')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service', parameters('service_authn_authz_name'))]"
            ],
            "properties": {
                "subject": "You are approaching an API quota limit",
                "body": "<!DOCTYPE html >\r\n<html>\r\n  <head>\r\n    <style>\r\n          body {font-size:12pt; font-family:\"Segoe UI\",\"Segoe WP\",\"Tahoma\",\"Arial\",\"sans-serif\";}\r\n          .alert { color: red; }\r\n          .child1 { padding-left: 20px; }\r\n          .child2 { padding-left: 40px; }\r\n          .number { text-align: right; }\r\n          .text { text-align: left; }\r\n          th, td { padding: 4px 10px; min-width: 100px; }\r\n          th { background-color: #DDDDDD;}\r\n        </style>\r\n  </head>\r\n  <body>\r\n    <p>Greetings $DevFirstName $DevLastName!</p>\r\n    <p>\r\n          You are approaching the quota limit on you subscription to the <strong>$ProdName</strong> product (primary key $SubPrimaryKey).\r\n          #if ($QuotaResetDate != \"\")\r\n          This quota will be renewed on $QuotaResetDate.\r\n          #else\r\n          This quota will not be renewed.\r\n          #end\r\n        </p>\r\n    <p>Below are details on quota usage for the subscription:</p>\r\n    <p>\r\n      <table>\r\n        <thead>\r\n          <th class=\"text\">Quota Scope</th>\r\n          <th class=\"number\">Calls</th>\r\n          <th class=\"number\">Call Quota</th>\r\n          <th class=\"number\">Bandwidth</th>\r\n          <th class=\"number\">Bandwidth Quota</th>\r\n        </thead>\r\n        <tbody>\r\n          <tr>\r\n            <td class=\"text\">Subscription</td>\r\n            <td class=\"number\">\r\n                  #if ($CallsAlert == true)\r\n                  <span class=\"alert\">$Calls</span>\r\n                  #else\r\n                  $Calls\r\n                  #end\r\n                </td>\r\n            <td class=\"number\">$CallQuota</td>\r\n            <td class=\"number\">\r\n                  #if ($BandwidthAlert == true)\r\n                  <span class=\"alert\">$Bandwidth</span>\r\n                  #else\r\n                  $Bandwidth\r\n                  #end\r\n                </td>\r\n            <td class=\"number\">$BandwidthQuota</td>\r\n          </tr>\r\n              #foreach ($api in $Apis)\r\n              <tr><td class=\"child1 text\">API: $api.Name</td><td class=\"number\">\r\n                  #if ($api.CallsAlert == true)\r\n                  <span class=\"alert\">$api.Calls</span>\r\n                  #else\r\n                  $api.Calls\r\n                  #end\r\n                </td><td class=\"number\">$api.CallQuota</td><td class=\"number\">\r\n                  #if ($api.BandwidthAlert == true)\r\n                  <span class=\"alert\">$api.Bandwidth</span>\r\n                  #else\r\n                  $api.Bandwidth\r\n                  #end\r\n                </td><td class=\"number\">$api.BandwidthQuota</td></tr>\r\n              #foreach ($operation in $api.Operations)\r\n              <tr><td class=\"child2 text\">Operation: $operation.Name</td><td class=\"number\">\r\n                  #if ($operation.CallsAlert == true)\r\n                  <span class=\"alert\">$operation.Calls</span>\r\n                  #else\r\n                  $operation.Calls\r\n                  #end\r\n                </td><td class=\"number\">$operation.CallQuota</td><td class=\"number\">\r\n                  #if ($operation.BandwidthAlert == true)\r\n                  <span class=\"alert\">$operation.Bandwidth</span>\r\n                  #else\r\n                  $operation.Bandwidth\r\n                  #end\r\n                </td><td class=\"number\">$operation.BandwidthQuota</td></tr>\r\n              #end\r\n              #end\r\n            </tbody>\r\n      </table>\r\n    </p>\r\n    <p>Thank you,</p>\r\n    <p>$OrganizationName API Team</p>\r\n    <a href=\"$DevPortalUrl\">$DevPortalUrl</a>\r\n    <p />\r\n  </body>\r\n</html>",
                "title": "Developer quota limit approaching notification",
                "description": "Developers receive this email to alert them when they are approaching a quota limit.",
                "parameters": [
                    {
                        "name": "DevFirstName",
                        "title": "Developer first name"
                    },
                    {
                        "name": "DevLastName",
                        "title": "Developer last name"
                    },
                    {
                        "name": "ProdName",
                        "title": "Product name"
                    },
                    {
                        "name": "OrganizationName",
                        "title": "Organization name"
                    },
                    {
                        "name": "SubPrimaryKey",
                        "title": "Primary Subscription key"
                    },
                    {
                        "name": "DevPortalUrl",
                        "title": "Developer portal URL"
                    },
                    {
                        "name": "QuotaResetDate",
                        "title": "Quota reset date"
                    }
                ]
            }
        },
        {
            "type": "Microsoft.ApiManagement/service/templates",
            "apiVersion": "2019-01-01",
            "name": "[concat(parameters('service_authn_authz_name'), '/RejectDeveloperNotificationMessage')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service', parameters('service_authn_authz_name'))]"
            ],
            "properties": {
                "subject": "Your subscription request for the $ProdName",
                "body": "<!DOCTYPE html >\r\n<html>\r\n  <head />\r\n  <body>\r\n    <p style=\"font-size:12pt;font-family:'Segoe UI'\">Dear $DevFirstName $DevLastName,</p>\r\n    <p style=\"font-size:12pt;font-family:'Segoe UI'\">\r\n          We would like to inform you that we reviewed your subscription request for the <strong>$ProdName</strong>.\r\n        </p>\r\n        #if ($SubDeclineReason == \"\")\r\n        <p style=\"font-size:12pt;font-family:'Segoe UI'\">Regretfully, we were unable to approve it, as subscriptions are temporarily suspended at this time.</p>\r\n        #else\r\n        <p style=\"font-size:12pt;font-family:'Segoe UI'\">\r\n          Regretfully, we were unable to approve it at this time for the following reason:\r\n          <div style=\"margin-left: 1.5em;\"> $SubDeclineReason </div></p>\r\n        #end\r\n        <p style=\"font-size:12pt;font-family:'Segoe UI'\"> We truly appreciate your interest. </p><p style=\"font-size:12pt;font-family:'Segoe UI'\">All the best,</p><p style=\"font-size:12pt;font-family:'Segoe UI'\">The $OrganizationName API Team</p><a style=\"font-size:12pt;font-family:'Segoe UI'\" href=\"http://$DevPortalUrl\">$DevPortalUrl</a></body>\r\n</html>",
                "title": "Subscription request declined",
                "description": "This email is sent to developers when their subscription requests for products requiring publisher approval is declined.",
                "parameters": [
                    {
                        "name": "DevFirstName",
                        "title": "Developer first name"
                    },
                    {
                        "name": "DevLastName",
                        "title": "Developer last name"
                    },
                    {
                        "name": "SubDeclineReason",
                        "title": "Reason for declining subscription"
                    },
                    {
                        "name": "ProdName",
                        "title": "Product name"
                    },
                    {
                        "name": "OrganizationName",
                        "title": "Organization name"
                    },
                    {
                        "name": "DevPortalUrl",
                        "title": "Developer portal URL"
                    }
                ]
            }
        },
        {
            "type": "Microsoft.ApiManagement/service/templates",
            "apiVersion": "2019-01-01",
            "name": "[concat(parameters('service_authn_authz_name'), '/RequestDeveloperNotificationMessage')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service', parameters('service_authn_authz_name'))]"
            ],
            "properties": {
                "subject": "Your subscription request for the $ProdName",
                "body": "<!DOCTYPE html >\r\n<html>\r\n  <head />\r\n  <body>\r\n    <p style=\"font-size:12pt;font-family:'Segoe UI'\">Dear $DevFirstName $DevLastName,</p>\r\n    <p style=\"font-size:12pt;font-family:'Segoe UI'\">\r\n          Thank you for your interest in our <strong>$ProdName</strong> API product!\r\n        </p>\r\n    <p style=\"font-size:12pt;font-family:'Segoe UI'\">\r\n          We were delighted to receive your subscription request. We will promptly review it and get back to you at <strong>$DevEmail</strong>.\r\n        </p>\r\n    <p style=\"font-size:12pt;font-family:'Segoe UI'\">Thank you,</p>\r\n    <p style=\"font-size:12pt;font-family:'Segoe UI'\">The $OrganizationName API Team</p>\r\n    <a style=\"font-size:12pt;font-family:'Segoe UI'\" href=\"http://$DevPortalUrl\">$DevPortalUrl</a>\r\n  </body>\r\n</html>",
                "title": "Subscription request received",
                "description": "This email is sent to developers to acknowledge receipt of their subscription requests for products requiring publisher approval.",
                "parameters": [
                    {
                        "name": "DevFirstName",
                        "title": "Developer first name"
                    },
                    {
                        "name": "DevLastName",
                        "title": "Developer last name"
                    },
                    {
                        "name": "DevEmail",
                        "title": "Developer email"
                    },
                    {
                        "name": "ProdName",
                        "title": "Product name"
                    },
                    {
                        "name": "OrganizationName",
                        "title": "Organization name"
                    },
                    {
                        "name": "DevPortalUrl",
                        "title": "Developer portal URL"
                    }
                ]
            }
        },
        {
            "type": "Microsoft.ApiManagement/service/users",
            "apiVersion": "2019-01-01",
            "name": "[concat(parameters('service_authn_authz_name'), '/1')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service', parameters('service_authn_authz_name'))]"
            ],
            "properties": {
                "firstName": "Administrator",
                "email": "magar@microsoft.com",
                "state": "active",
                "identities": [
                    {
                        "provider": "Azure",
                        "id": "magar@microsoft.com"
                    }
                ],
                "lastName": "[parameters('users_1_lastName')]"
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2019-03-01",
            "name": "[parameters('virtualMachines_Jumpbox_name')]",
            "location": "southcentralus",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaces_jumpbox476_name'))]"
            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "Standard_B2s"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "microsoft-dsvm",
                        "offer": "dsvm-windows",
                        "sku": "server-2016",
                        "version": "latest"
                    },
                    "osDisk": {
                        "osType": "Windows",
                        "name": "[concat(parameters('virtualMachines_Jumpbox_name'), '_OsDisk_1_638c2ff9e5cc485b83a54617ee24043b')]",
                        "createOption": "FromImage",
                        "caching": "ReadWrite",
                        "managedDisk": {
                            "storageAccountType": "Premium_LRS",
                            "id": "[resourceId('Microsoft.Compute/disks', concat(parameters('virtualMachines_Jumpbox_name'), '_OsDisk_1_638c2ff9e5cc485b83a54617ee24043b'))]"
                        },
                        "diskSizeGB": 127
                    },
                    "dataDisks": []
                },
                "osProfile": {
                    "computerName": "[parameters('virtualMachines_Jumpbox_name')]",
                    "adminUsername": "magar",
                    "windowsConfiguration": {
                        "provisionVMAgent": true,
                        "enableAutomaticUpdates": true
                    },
                    "secrets": [],
                    "allowExtensionOperations": true
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaces_jumpbox476_name'))]"
                        }
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups/securityRules",
            "apiVersion": "2019-07-01",
            "name": "[concat(parameters('networkSecurityGroups_Jumpbox_nsg_name'), '/RDP')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_Jumpbox_nsg_name'))]"
            ],
            "properties": {
                "protocol": "TCP",
                "sourcePortRange": "*",
                "destinationPortRange": "3389",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 1010,
                "direction": "Inbound",
                "sourcePortRanges": [],
                "destinationPortRanges": [],
                "sourceAddressPrefixes": [],
                "destinationAddressPrefixes": []
            }
        },
        {
            "type": "Microsoft.Network/privateDnsZones/A",
            "apiVersion": "2018-09-01",
            "name": "[concat(parameters('privateDnsZones_ase.appserviceenvironment.net_name'), '/backendappsvc')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/privateDnsZones', parameters('privateDnsZones_ase.appserviceenvironment.net_name'))]"
            ],
            "properties": {
                "ttl": 3600,
                "aRecords": [
                    {
                        "ipv4Address": "10.0.0.11"
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/privateDnsZones/A",
            "apiVersion": "2018-09-01",
            "name": "[concat(parameters('privateDnsZones_ase.appserviceenvironment.net_name'), '/backendappsvc.scm')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/privateDnsZones', parameters('privateDnsZones_ase.appserviceenvironment.net_name'))]"
            ],
            "properties": {
                "ttl": 3600,
                "aRecords": [
                    {
                        "ipv4Address": "10.0.0.11"
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/privateDnsZones/A",
            "apiVersion": "2018-09-01",
            "name": "[concat(parameters('privateDnsZones_ase.appserviceenvironment.net_name'), '/backendfunctionapp')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/privateDnsZones', parameters('privateDnsZones_ase.appserviceenvironment.net_name'))]"
            ],
            "properties": {
                "ttl": 3600,
                "aRecords": [
                    {
                        "ipv4Address": "10.0.0.11"
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/privateDnsZones/A",
            "apiVersion": "2018-09-01",
            "name": "[concat(parameters('privateDnsZones_ase.appserviceenvironment.net_name'), '/backendfunctionapp.scm')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/privateDnsZones', parameters('privateDnsZones_ase.appserviceenvironment.net_name'))]"
            ],
            "properties": {
                "ttl": 3600,
                "aRecords": [
                    {
                        "ipv4Address": "10.0.0.11"
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/privateDnsZones/A",
            "apiVersion": "2018-09-01",
            "name": "[concat(parameters('privateDnsZones_ase.appserviceenvironment.net_name'), '/frontentappsvc')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/privateDnsZones', parameters('privateDnsZones_ase.appserviceenvironment.net_name'))]"
            ],
            "properties": {
                "ttl": 3600,
                "aRecords": [
                    {
                        "ipv4Address": "10.0.0.11"
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/privateDnsZones/A",
            "apiVersion": "2018-09-01",
            "name": "[concat(parameters('privateDnsZones_ase.appserviceenvironment.net_name'), '/frontentappsvc.scm')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/privateDnsZones', parameters('privateDnsZones_ase.appserviceenvironment.net_name'))]"
            ],
            "properties": {
                "ttl": 3600,
                "aRecords": [
                    {
                        "ipv4Address": "10.0.0.11"
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/privateDnsZones/A",
            "apiVersion": "2018-09-01",
            "name": "[concat(parameters('privateDnsZones_ase.appserviceenvironment.net_name'), '/jumpbox')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/privateDnsZones', parameters('privateDnsZones_ase.appserviceenvironment.net_name'))]"
            ],
            "properties": {
                "ttl": 10,
                "aRecords": [
                    {
                        "ipv4Address": "10.0.2.4"
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/privateDnsZones/A",
            "apiVersion": "2018-09-01",
            "name": "[concat(parameters('privateDnsZones_ase.appserviceenvironment.net_name'), '/vm000001')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/privateDnsZones', parameters('privateDnsZones_ase.appserviceenvironment.net_name'))]"
            ],
            "properties": {
                "ttl": 10,
                "aRecords": [
                    {
                        "ipv4Address": "10.0.3.5"
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/privateDnsZones/A",
            "apiVersion": "2018-09-01",
            "name": "[concat(parameters('privateDnsZones_ase.appserviceenvironment.net_name'), '/vm000003')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/privateDnsZones', parameters('privateDnsZones_ase.appserviceenvironment.net_name'))]"
            ],
            "properties": {
                "ttl": 10,
                "aRecords": [
                    {
                        "ipv4Address": "10.0.3.7"
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/privateDnsZones/SOA",
            "apiVersion": "2018-09-01",
            "name": "[concat(parameters('privateDnsZones_ase.appserviceenvironment.net_name'), '/@')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/privateDnsZones', parameters('privateDnsZones_ase.appserviceenvironment.net_name'))]"
            ],
            "properties": {
                "ttl": 3600,
                "soaRecord": {
                    "email": "azureprivatedns-host.microsoft.com",
                    "expireTime": 2419200,
                    "host": "internal.cloudapp.net",
                    "refreshTime": 3600,
                    "retryTime": 300,
                    "serialNumber": 1,
                    "minimumTtl": 300
                }
            }
        },
        {
            "type": "Microsoft.Network/privateDnsZones/SOA",
            "apiVersion": "2018-09-01",
            "name": "[concat(parameters('privateDnsZones_marvingarcia.xyz_name'), '/@')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/privateDnsZones', parameters('privateDnsZones_marvingarcia.xyz_name'))]"
            ],
            "properties": {
                "ttl": 3600,
                "soaRecord": {
                    "email": "azureprivatedns-host.microsoft.com",
                    "expireTime": 2419200,
                    "host": "internal.cloudapp.net",
                    "refreshTime": 3600,
                    "retryTime": 300,
                    "serialNumber": 1,
                    "minimumTtl": 300
                }
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks/subnets",
            "apiVersion": "2019-07-01",
            "name": "[concat(parameters('virtualNetworks_AuthN_AuthZ_Vnet_name'), '/ASE')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_AuthN_AuthZ_Vnet_name'))]"
            ],
            "properties": {
                "addressPrefix": "10.0.0.0/24",
                "delegations": [],
                "privateEndpointNetworkPolicies": "Enabled",
                "privateLinkServiceNetworkPolicies": "Enabled"
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks/subnets",
            "apiVersion": "2019-07-01",
            "name": "[concat(parameters('virtualNetworks_AuthN_AuthZ_Vnet_name'), '/GATEWAY')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_AuthN_AuthZ_Vnet_name'))]"
            ],
            "properties": {
                "addressPrefix": "10.0.1.0/24",
                "serviceEndpoints": [],
                "delegations": [],
                "privateEndpointNetworkPolicies": "Enabled",
                "privateLinkServiceNetworkPolicies": "Enabled"
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks/subnets",
            "apiVersion": "2019-07-01",
            "name": "[concat(parameters('virtualNetworks_AuthN_AuthZ_Vnet_name'), '/GATEWAY-V2')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_AuthN_AuthZ_Vnet_name'))]"
            ],
            "properties": {
                "addressPrefix": "10.0.3.0/24",
                "serviceEndpoints": [],
                "delegations": [],
                "privateEndpointNetworkPolicies": "Enabled",
                "privateLinkServiceNetworkPolicies": "Enabled"
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks/subnets",
            "apiVersion": "2019-07-01",
            "name": "[concat(parameters('virtualNetworks_AuthN_AuthZ_Vnet_name'), '/VMs')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_AuthN_AuthZ_Vnet_name'))]"
            ],
            "properties": {
                "addressPrefix": "10.0.2.0/24",
                "serviceEndpoints": [],
                "delegations": [],
                "privateEndpointNetworkPolicies": "Enabled",
                "privateLinkServiceNetworkPolicies": "Enabled"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices",
            "apiVersion": "2019-04-01",
            "name": "[concat(parameters('storageAccounts_backendfunctiona03c_name'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_backendfunctiona03c_name'))]"
            ],
            "properties": {
                "cors": {
                    "corsRules": []
                },
                "deleteRetentionPolicy": {
                    "enabled": false
                }
            }
        },
        {
            "type": "Microsoft.Web/hostingEnvironments",
            "apiVersion": "2016-09-01",
            "name": "[parameters('hostingEnvironments_ase_name')]",
            "location": "South Central US",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_AuthN_AuthZ_Vnet_name'))]"
            ],
            "kind": "ASEV2",
            "zones": [
                null
            ],
            "properties": {
                "name": "[parameters('hostingEnvironments_ase_name')]",
                "location": "South Central US",
                "vnetName": "AuthN-AuthZ-Vnet",
                "vnetResourceGroupName": "AuthN-AuthZ-RG",
                "vnetSubnetName": "ASE",
                "virtualNetwork": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_AuthN_AuthZ_Vnet_name'))]",
                    "subnet": "ASE"
                },
                "internalLoadBalancingMode": "Web, Publishing",
                "multiSize": "Standard_D1_V2",
                "multiRoleCount": 2,
                "ipsslAddressCount": 0,
                "dnsSuffix": "[concat(parameters('hostingEnvironments_ase_name'), '.appserviceenvironment.net')]",
                "networkAccessControlList": [],
                "frontEndScaleFactor": 15,
                "suspended": false
            }
        },
        {
            "type": "Microsoft.Web/hostingEnvironments/multiRolePools",
            "apiVersion": "2016-09-01",
            "name": "[concat(parameters('hostingEnvironments_ase_name'), '/default')]",
            "location": "South Central US",
            "dependsOn": [
                "[resourceId('Microsoft.Web/hostingEnvironments', parameters('hostingEnvironments_ase_name'))]"
            ],
            "sku": {
                "name": "Q1",
                "tier": "Quantum",
                "size": "Q1",
                "family": "Q",
                "capacity": 2
            },
            "properties": {
                "workerSize": "Standard_D1_V2",
                "workerCount": 2,
                "instanceNames": [
                    "10.0.0.8",
                    "10.0.0.9"
                ],
                "mdmId": "waws-prod-sn1-e5bf45eb_MultiRole"
            }
        },
        {
            "type": "Microsoft.Web/serverfarms",
            "apiVersion": "2016-09-01",
            "name": "[parameters('serverfarms_AuthN_AuthZ_Plan_name')]",
            "location": "South Central US",
            "dependsOn": [
                "[resourceId('Microsoft.Web/hostingEnvironments', parameters('hostingEnvironments_ase_name'))]"
            ],
            "sku": {
                "name": "I1",
                "tier": "Isolated",
                "size": "I1",
                "family": "I",
                "capacity": 1
            },
            "kind": "app",
            "properties": {
                "name": "[parameters('serverfarms_AuthN_AuthZ_Plan_name')]",
                "hostingEnvironmentProfile": {
                    "id": "[resourceId('Microsoft.Web/hostingEnvironments', parameters('hostingEnvironments_ase_name'))]"
                },
                "perSiteScaling": false,
                "reserved": false,
                "targetWorkerCount": 0,
                "targetWorkerSizeId": 0
            }
        },
        {
            "type": "Microsoft.Web/sites/config",
            "apiVersion": "2016-08-01",
            "name": "[concat(parameters('sites_backendappsvc_name'), '/web')]",
            "location": "South Central US",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('sites_backendappsvc_name'))]"
            ],
            "properties": {
                "numberOfWorkers": 1,
                "defaultDocuments": [
                    "Default.htm",
                    "Default.html",
                    "Default.asp",
                    "index.htm",
                    "index.html",
                    "iisstart.htm",
                    "default.aspx",
                    "index.php",
                    "hostingstart.html"
                ],
                "netFrameworkVersion": "v4.0",
                "phpVersion": "5.6",
                "pythonVersion": "",
                "nodeVersion": "",
                "linuxFxVersion": "",
                "requestTracingEnabled": false,
                "remoteDebuggingEnabled": false,
                "remoteDebuggingVersion": "VS2017",
                "httpLoggingEnabled": false,
                "logsDirectorySizeLimit": 35,
                "detailedErrorLoggingEnabled": false,
                "publishingUsername": "$backendappsvc",
                "scmType": "None",
                "use32BitWorkerProcess": true,
                "webSocketsEnabled": false,
                "alwaysOn": true,
                "appCommandLine": "",
                "managedPipelineMode": "Integrated",
                "virtualApplications": [
                    {
                        "virtualPath": "/",
                        "physicalPath": "site\\wwwroot",
                        "preloadEnabled": true,
                        "virtualDirectories": null
                    }
                ],
                "winAuthAdminState": 0,
                "winAuthTenantState": 0,
                "customAppPoolIdentityAdminState": false,
                "customAppPoolIdentityTenantState": false,
                "loadBalancing": "LeastRequests",
                "routingRules": [],
                "experiments": {
                    "rampUpRules": []
                },
                "autoHealEnabled": false,
                "vnetName": "",
                "siteAuthEnabled": true,
                "siteAuthSettings": {
                    "enabled": null,
                    "unauthenticatedClientAction": null,
                    "tokenStoreEnabled": null,
                    "allowedExternalRedirectUrls": null,
                    "defaultProvider": null,
                    "clientId": "70536fca-3b08-457a-bc32-55ef8c404596",
                    "clientSecret": null,
                    "clientSecretCertificateThumbprint": null,
                    "issuer": "https://sts.windows.net/6ffc77a4-d06d-49ce-93e8-ef7ba66c6937/",
                    "allowedAudiences": null,
                    "additionalLoginParams": null,
                    "isAadAutoProvisioned": false,
                    "googleClientId": null,
                    "googleClientSecret": null,
                    "googleOAuthScopes": null,
                    "facebookAppId": null,
                    "facebookAppSecret": null,
                    "facebookOAuthScopes": null,
                    "twitterConsumerKey": null,
                    "twitterConsumerSecret": null,
                    "microsoftAccountClientId": null,
                    "microsoftAccountClientSecret": null,
                    "microsoftAccountOAuthScopes": null
                },
                "localMySqlEnabled": false,
                "http20Enabled": false,
                "minTlsVersion": "1.2",
                "ftpsState": "AllAllowed",
                "reservedInstanceCount": 0,
                "fileChangeAuditEnabled": false
            }
        },
        {
            "type": "Microsoft.Web/sites/config",
            "apiVersion": "2016-08-01",
            "name": "[concat(parameters('sites_backendfunctionapp_name'), '/web')]",
            "location": "South Central US",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('sites_backendfunctionapp_name'))]"
            ],
            "properties": {
                "numberOfWorkers": 1,
                "defaultDocuments": [
                    "Default.htm",
                    "Default.html",
                    "Default.asp",
                    "index.htm",
                    "index.html",
                    "iisstart.htm",
                    "default.aspx",
                    "index.php"
                ],
                "netFrameworkVersion": "v4.0",
                "phpVersion": "5.6",
                "pythonVersion": "",
                "nodeVersion": "",
                "linuxFxVersion": "",
                "requestTracingEnabled": false,
                "remoteDebuggingEnabled": false,
                "httpLoggingEnabled": false,
                "logsDirectorySizeLimit": 35,
                "detailedErrorLoggingEnabled": false,
                "publishingUsername": "$backendfunctionapp",
                "scmType": "None",
                "use32BitWorkerProcess": true,
                "webSocketsEnabled": false,
                "alwaysOn": true,
                "appCommandLine": "",
                "managedPipelineMode": "Integrated",
                "virtualApplications": [
                    {
                        "virtualPath": "/",
                        "physicalPath": "site\\wwwroot",
                        "preloadEnabled": true,
                        "virtualDirectories": null
                    }
                ],
                "winAuthAdminState": 0,
                "winAuthTenantState": 0,
                "customAppPoolIdentityAdminState": false,
                "customAppPoolIdentityTenantState": false,
                "loadBalancing": "LeastRequests",
                "routingRules": [],
                "experiments": {
                    "rampUpRules": []
                },
                "autoHealEnabled": false,
                "vnetName": "",
                "siteAuthEnabled": true,
                "siteAuthSettings": {
                    "enabled": null,
                    "unauthenticatedClientAction": null,
                    "tokenStoreEnabled": null,
                    "allowedExternalRedirectUrls": null,
                    "defaultProvider": null,
                    "clientId": "775346e0-24b9-4340-a95b-62b2aa658e1f",
                    "clientSecret": null,
                    "clientSecretCertificateThumbprint": null,
                    "issuer": "https://sts.windows.net/6ffc77a4-d06d-49ce-93e8-ef7ba66c6937/",
                    "allowedAudiences": null,
                    "additionalLoginParams": null,
                    "isAadAutoProvisioned": false,
                    "googleClientId": null,
                    "googleClientSecret": null,
                    "googleOAuthScopes": null,
                    "facebookAppId": null,
                    "facebookAppSecret": null,
                    "facebookOAuthScopes": null,
                    "twitterConsumerKey": null,
                    "twitterConsumerSecret": null,
                    "microsoftAccountClientId": null,
                    "microsoftAccountClientSecret": null,
                    "microsoftAccountOAuthScopes": null
                },
                "cors": {
                    "allowedOrigins": [
                        "https://functions.azure.com",
                        "https://functions-staging.azure.com",
                        "https://functions-next.azure.com"
                    ],
                    "supportCredentials": false
                },
                "localMySqlEnabled": false,
                "http20Enabled": false,
                "minTlsVersion": "1.2",
                "ftpsState": "AllAllowed",
                "reservedInstanceCount": 0,
                "fileChangeAuditEnabled": false
            }
        },
        {
            "type": "Microsoft.Web/sites/config",
            "apiVersion": "2016-08-01",
            "name": "[concat(parameters('sites_frontentappsvc_name'), '/web')]",
            "location": "South Central US",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('sites_frontentappsvc_name'))]"
            ],
            "properties": {
                "numberOfWorkers": 1,
                "defaultDocuments": [
                    "Default.htm",
                    "Default.html",
                    "Default.asp",
                    "index.htm",
                    "index.html",
                    "iisstart.htm",
                    "default.aspx",
                    "index.php",
                    "hostingstart.html"
                ],
                "netFrameworkVersion": "v4.0",
                "phpVersion": "5.6",
                "pythonVersion": "",
                "nodeVersion": "",
                "linuxFxVersion": "",
                "requestTracingEnabled": false,
                "remoteDebuggingEnabled": false,
                "remoteDebuggingVersion": "VS2017",
                "httpLoggingEnabled": false,
                "logsDirectorySizeLimit": 35,
                "detailedErrorLoggingEnabled": false,
                "publishingUsername": "$frontentappsvc",
                "scmType": "None",
                "use32BitWorkerProcess": true,
                "webSocketsEnabled": false,
                "alwaysOn": true,
                "appCommandLine": "",
                "managedPipelineMode": "Integrated",
                "virtualApplications": [
                    {
                        "virtualPath": "/",
                        "physicalPath": "site\\wwwroot",
                        "preloadEnabled": true,
                        "virtualDirectories": null
                    }
                ],
                "winAuthAdminState": 0,
                "winAuthTenantState": 0,
                "customAppPoolIdentityAdminState": false,
                "customAppPoolIdentityTenantState": false,
                "loadBalancing": "LeastRequests",
                "routingRules": [],
                "experiments": {
                    "rampUpRules": []
                },
                "autoHealEnabled": false,
                "vnetName": "",
                "siteAuthEnabled": true,
                "siteAuthSettings": {
                    "enabled": null,
                    "unauthenticatedClientAction": null,
                    "tokenStoreEnabled": null,
                    "allowedExternalRedirectUrls": null,
                    "defaultProvider": null,
                    "clientId": "f16cee90-7830-4804-bef8-3598349a96df",
                    "clientSecret": null,
                    "clientSecretCertificateThumbprint": null,
                    "issuer": "https://sts.windows.net/6ffc77a4-d06d-49ce-93e8-ef7ba66c6937/",
                    "allowedAudiences": null,
                    "additionalLoginParams": null,
                    "isAadAutoProvisioned": false,
                    "googleClientId": null,
                    "googleClientSecret": null,
                    "googleOAuthScopes": null,
                    "facebookAppId": null,
                    "facebookAppSecret": null,
                    "facebookOAuthScopes": null,
                    "twitterConsumerKey": null,
                    "twitterConsumerSecret": null,
                    "microsoftAccountClientId": null,
                    "microsoftAccountClientSecret": null,
                    "microsoftAccountOAuthScopes": null
                },
                "localMySqlEnabled": false,
                "http20Enabled": false,
                "minTlsVersion": "1.2",
                "ftpsState": "AllAllowed",
                "reservedInstanceCount": 0,
                "fileChangeAuditEnabled": false
            }
        },
        {
            "type": "Microsoft.Web/sites/deployments",
            "apiVersion": "2016-08-01",
            "name": "[concat(parameters('sites_backendfunctionapp_name'), '/56c35a5c9dab4506a2fd10e6d7e05667')]",
            "location": "South Central US",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('sites_backendfunctionapp_name'))]"
            ],
            "properties": {
                "id": "56c35a5c9dab4506a2fd10e6d7e05667",
                "status": 4,
                "author_email": "N/A",
                "author": "N/A",
                "deployer": "Push-Deployer",
                "message": "Created via a push deployment",
                "start_time": "2019-09-11T14:46:16.3140086Z",
                "end_time": "2019-09-11T14:46:17.085288Z",
                "active": true
            }
        },
        {
            "type": "Microsoft.Web/sites/hostNameBindings",
            "apiVersion": "2016-08-01",
            "name": "[concat(parameters('sites_backendappsvc_name'), '/', parameters('sites_backendappsvc_name'), '.ase.appserviceenvironment.net')]",
            "location": "South Central US",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('sites_backendappsvc_name'))]"
            ],
            "properties": {
                "siteName": "backendappsvc",
                "hostNameType": "Verified"
            }
        },
        {
            "type": "Microsoft.Web/sites/hostNameBindings",
            "apiVersion": "2016-08-01",
            "name": "[concat(parameters('sites_backendfunctionapp_name'), '/', parameters('sites_backendfunctionapp_name'), '.ase.appserviceenvironment.net')]",
            "location": "South Central US",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('sites_backendfunctionapp_name'))]"
            ],
            "properties": {
                "siteName": "backendfunctionapp",
                "hostNameType": "Verified"
            }
        },
        {
            "type": "Microsoft.Web/sites/hostNameBindings",
            "apiVersion": "2016-08-01",
            "name": "[concat(parameters('sites_backendfunctionapp_name'), '/', parameters('sites_backendfunctionapp_name'), '.marvingarcia.xyz')]",
            "location": "South Central US",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('sites_backendfunctionapp_name'))]"
            ],
            "properties": {
                "siteName": "backendfunctionapp",
                "hostNameType": "Verified",
                "sslState": "SniEnabled",
                "thumbprint": "325D6EF8231B052DA06E3646A450BD5D8CD0F4DE"
            }
        },
        {
            "type": "Microsoft.Web/sites/hostNameBindings",
            "apiVersion": "2016-08-01",
            "name": "[concat(parameters('sites_frontentappsvc_name'), '/', parameters('sites_frontentappsvc_name'), '.ase.appserviceenvironment.net')]",
            "location": "South Central US",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('sites_frontentappsvc_name'))]"
            ],
            "properties": {
                "siteName": "frontentappsvc",
                "hostNameType": "Verified"
            }
        },
        {
            "type": "Microsoft.Web/sites/hostNameBindings",
            "apiVersion": "2016-08-01",
            "name": "[concat(parameters('sites_frontentappsvc_name'), '/', parameters('sites_frontentappsvc_name'), '.marvingarcia.xyz')]",
            "location": "South Central US",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('sites_frontentappsvc_name'))]"
            ],
            "properties": {
                "siteName": "frontentappsvc",
                "hostNameType": "Verified",
                "sslState": "SniEnabled",
                "thumbprint": "325D6EF8231B052DA06E3646A450BD5D8CD0F4DE"
            }
        },
        {
            "type": "Microsoft.ApiManagement/service/apis/operations",
            "apiVersion": "2019-01-01",
            "name": "[concat(parameters('service_authn_authz_name'), '/echo-api/create-resource')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service/apis', parameters('service_authn_authz_name'), 'echo-api')]",
                "[resourceId('Microsoft.ApiManagement/service', parameters('service_authn_authz_name'))]"
            ],
            "properties": {
                "displayName": "Create resource",
                "method": "POST",
                "urlTemplate": "/resource",
                "templateParameters": [],
                "description": "A demonstration of a POST call based on the echo backend above. The request body is expected to contain JSON-formatted data (see example below). A policy is used to automatically transform any request sent in JSON directly to XML. In a real-world scenario this could be used to enable modern clients to speak to a legacy backend.",
                "request": {
                    "queryParameters": [],
                    "headers": [],
                    "representations": [
                        {
                            "contentType": "application/json",
                            "sample": "{\r\n\t\"vehicleType\": \"train\",\r\n\t\"maxSpeed\": 125,\r\n\t\"avgSpeed\": 90,\r\n\t\"speedUnit\": \"mph\"\r\n}"
                        }
                    ]
                },
                "responses": [
                    {
                        "statusCode": 200,
                        "representations": [],
                        "headers": []
                    }
                ]
            }
        },
        {
            "type": "Microsoft.ApiManagement/service/apis/operations",
            "apiVersion": "2019-01-01",
            "name": "[concat(parameters('service_authn_authz_name'), '/echo-api/modify-resource')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service/apis', parameters('service_authn_authz_name'), 'echo-api')]",
                "[resourceId('Microsoft.ApiManagement/service', parameters('service_authn_authz_name'))]"
            ],
            "properties": {
                "displayName": "Modify Resource",
                "method": "PUT",
                "urlTemplate": "/resource",
                "templateParameters": [],
                "description": "A demonstration of a PUT call handled by the same \"echo\" backend as above. You can now specify a request body in addition to headers and it will be returned as well.",
                "responses": [
                    {
                        "statusCode": 200,
                        "representations": [],
                        "headers": []
                    }
                ]
            }
        },
        {
            "type": "Microsoft.ApiManagement/service/apis/operations",
            "apiVersion": "2019-01-01",
            "name": "[concat(parameters('service_authn_authz_name'), '/echo-api/remove-resource')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service/apis', parameters('service_authn_authz_name'), 'echo-api')]",
                "[resourceId('Microsoft.ApiManagement/service', parameters('service_authn_authz_name'))]"
            ],
            "properties": {
                "displayName": "Remove resource",
                "method": "DELETE",
                "urlTemplate": "/resource",
                "templateParameters": [],
                "description": "A demonstration of a DELETE call which traditionally deletes the resource. It is based on the same \"echo\" backend as in all other operations so nothing is actually deleted.",
                "responses": [
                    {
                        "statusCode": 200,
                        "representations": [],
                        "headers": []
                    }
                ]
            }
        },
        {
            "type": "Microsoft.ApiManagement/service/apis/operations",
            "apiVersion": "2019-01-01",
            "name": "[concat(parameters('service_authn_authz_name'), '/echo-api/retrieve-header-only')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service/apis', parameters('service_authn_authz_name'), 'echo-api')]",
                "[resourceId('Microsoft.ApiManagement/service', parameters('service_authn_authz_name'))]"
            ],
            "properties": {
                "displayName": "Retrieve header only",
                "method": "HEAD",
                "urlTemplate": "/resource",
                "templateParameters": [],
                "description": "The HEAD operation returns only headers. In this demonstration a policy is used to set additional headers when the response is returned and to enable JSONP.",
                "responses": [
                    {
                        "statusCode": 200,
                        "representations": [],
                        "headers": []
                    }
                ]
            }
        },
        {
            "type": "Microsoft.ApiManagement/service/apis/operations",
            "apiVersion": "2019-01-01",
            "name": "[concat(parameters('service_authn_authz_name'), '/echo-api/retrieve-resource')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service/apis', parameters('service_authn_authz_name'), 'echo-api')]",
                "[resourceId('Microsoft.ApiManagement/service', parameters('service_authn_authz_name'))]"
            ],
            "properties": {
                "displayName": "Retrieve resource",
                "method": "GET",
                "urlTemplate": "/resource",
                "templateParameters": [],
                "description": "A demonstration of a GET call on a sample resource. It is handled by an \"echo\" backend which returns a response equal to the request (the supplied headers and body are being returned as received).",
                "request": {
                    "queryParameters": [
                        {
                            "name": "param1",
                            "description": "A sample parameter that is required and has a default value of \"sample\".",
                            "type": "string",
                            "defaultValue": "sample",
                            "required": true,
                            "values": [
                                "sample"
                            ]
                        },
                        {
                            "name": "param2",
                            "description": "Another sample parameter, set to not required.",
                            "type": "number",
                            "values": []
                        }
                    ],
                    "headers": [],
                    "representations": []
                },
                "responses": [
                    {
                        "statusCode": 200,
                        "description": "Returned in all cases.",
                        "representations": [],
                        "headers": []
                    }
                ]
            }
        },
        {
            "type": "Microsoft.ApiManagement/service/apis/operations",
            "apiVersion": "2019-01-01",
            "name": "[concat(parameters('service_authn_authz_name'), '/echo-api/retrieve-resource-cached')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service/apis', parameters('service_authn_authz_name'), 'echo-api')]",
                "[resourceId('Microsoft.ApiManagement/service', parameters('service_authn_authz_name'))]"
            ],
            "properties": {
                "displayName": "Retrieve resource (cached)",
                "method": "GET",
                "urlTemplate": "/resource-cached",
                "templateParameters": [],
                "description": "A demonstration of a GET call with caching enabled on the same \"echo\" backend as above. Cache TTL is set to 1 hour. When you make the first request the headers you supplied will be cached. Subsequent calls will return the same headers as the first time even if you change them in your request.",
                "request": {
                    "queryParameters": [
                        {
                            "name": "param1",
                            "description": "A sample parameter that is required and has a default value of \"sample\".",
                            "type": "string",
                            "defaultValue": "sample",
                            "required": true,
                            "values": [
                                "sample"
                            ]
                        },
                        {
                            "name": "param2",
                            "description": "Another sample parameter, set to not required.",
                            "type": "string",
                            "values": []
                        }
                    ],
                    "headers": [],
                    "representations": []
                },
                "responses": [
                    {
                        "statusCode": 200,
                        "representations": [],
                        "headers": []
                    }
                ]
            }
        },
        {
            "type": "Microsoft.ApiManagement/service/diagnostics",
            "apiVersion": "2019-01-01",
            "name": "[concat(parameters('service_authn_authz_name'), '/applicationinsights')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service', parameters('service_authn_authz_name'))]",
                "[resourceId('Microsoft.ApiManagement/service/loggers', parameters('service_authn_authz_name'), concat(parameters('service_authn_authz_name'), '-Insights'))]"
            ],
            "properties": {
                "alwaysLog": "allErrors",
                "enableHttpCorrelationHeaders": true,
                "loggerId": "[resourceId('Microsoft.ApiManagement/service/loggers', parameters('service_authn_authz_name'), concat(parameters('service_authn_authz_name'), '-Insights'))]",
                "sampling": {
                    "samplingType": "fixed",
                    "percentage": 100
                }
            }
        },
        {
            "type": "Microsoft.ApiManagement/service/groups/users",
            "apiVersion": "2019-01-01",
            "name": "[concat(parameters('service_authn_authz_name'), '/administrators/1')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service/groups', parameters('service_authn_authz_name'), 'administrators')]",
                "[resourceId('Microsoft.ApiManagement/service', parameters('service_authn_authz_name'))]"
            ],
            "properties": {
                "firstName": "Administrator",
                "lastName": "",
                "email": "magar@microsoft.com",
                "state": "active",
                "registrationDate": "2019-09-12T05:06:00.857Z",
                "identities": [
                    {
                        "provider": "Azure",
                        "id": "magar@microsoft.com"
                    }
                ]
            }
        },
        {
            "type": "Microsoft.ApiManagement/service/groups/users",
            "apiVersion": "2019-01-01",
            "name": "[concat(parameters('service_authn_authz_name'), '/developers/1')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service/groups', parameters('service_authn_authz_name'), 'developers')]",
                "[resourceId('Microsoft.ApiManagement/service', parameters('service_authn_authz_name'))]"
            ],
            "properties": {
                "firstName": "Administrator",
                "lastName": "",
                "email": "magar@microsoft.com",
                "state": "active",
                "registrationDate": "2019-09-12T05:06:00.857Z",
                "identities": [
                    {
                        "provider": "Azure",
                        "id": "magar@microsoft.com"
                    }
                ]
            }
        },
        {
            "type": "Microsoft.ApiManagement/service/loggers",
            "apiVersion": "2019-01-01",
            "name": "[concat(parameters('service_authn_authz_name'), '/', parameters('service_authn_authz_name'), '-Insights')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service', parameters('service_authn_authz_name'))]",
                "[resourceId('microsoft.insights/components', parameters('components_AuthN_AuthZ_Insights_name'))]"
            ],
            "properties": {
                "loggerType": "applicationInsights",
                "credentials": {
                    "instrumentationKey": "{{Logger-Credentials-5d79d8f7f51c850184caa2d2}}"
                },
                "isBuffered": true,
                "resourceId": "[resourceId('microsoft.insights/components', parameters('components_AuthN_AuthZ_Insights_name'))]"
            }
        },
        {
            "type": "Microsoft.ApiManagement/service/products/apis",
            "apiVersion": "2019-01-01",
            "name": "[concat(parameters('service_authn_authz_name'), '/starter/echo-api')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service/products', parameters('service_authn_authz_name'), 'starter')]",
                "[resourceId('Microsoft.ApiManagement/service', parameters('service_authn_authz_name'))]"
            ],
            "properties": {
                "displayName": "Echo API",
                "apiRevision": "1",
                "serviceUrl": "http://echoapi.cloudapp.net/api",
                "path": "echo",
                "protocols": [
                    "https"
                ],
                "isCurrent": true
            }
        },
        {
            "type": "Microsoft.ApiManagement/service/products/apis",
            "apiVersion": "2019-01-01",
            "name": "[concat(parameters('service_authn_authz_name'), '/unlimited/echo-api')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service/products', parameters('service_authn_authz_name'), 'unlimited')]",
                "[resourceId('Microsoft.ApiManagement/service', parameters('service_authn_authz_name'))]"
            ],
            "properties": {
                "displayName": "Echo API",
                "apiRevision": "1",
                "serviceUrl": "http://echoapi.cloudapp.net/api",
                "path": "echo",
                "protocols": [
                    "https"
                ],
                "isCurrent": true
            }
        },
        {
            "type": "Microsoft.ApiManagement/service/products/groups",
            "apiVersion": "2019-01-01",
            "name": "[concat(parameters('service_authn_authz_name'), '/starter/administrators')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service/products', parameters('service_authn_authz_name'), 'starter')]",
                "[resourceId('Microsoft.ApiManagement/service', parameters('service_authn_authz_name'))]"
            ],
            "properties": {
                "displayName": "Administrators",
                "description": "Administrators is a built-in group. Its membership is managed by the system. Microsoft Azure subscription administrators fall into this group.",
                "builtIn": true,
                "type": "system"
            }
        },
        {
            "type": "Microsoft.ApiManagement/service/products/groups",
            "apiVersion": "2019-01-01",
            "name": "[concat(parameters('service_authn_authz_name'), '/unlimited/administrators')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service/products', parameters('service_authn_authz_name'), 'unlimited')]",
                "[resourceId('Microsoft.ApiManagement/service', parameters('service_authn_authz_name'))]"
            ],
            "properties": {
                "displayName": "Administrators",
                "description": "Administrators is a built-in group. Its membership is managed by the system. Microsoft Azure subscription administrators fall into this group.",
                "builtIn": true,
                "type": "system"
            }
        },
        {
            "type": "Microsoft.ApiManagement/service/products/groups",
            "apiVersion": "2019-01-01",
            "name": "[concat(parameters('service_authn_authz_name'), '/starter/developers')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service/products', parameters('service_authn_authz_name'), 'starter')]",
                "[resourceId('Microsoft.ApiManagement/service', parameters('service_authn_authz_name'))]"
            ],
            "properties": {
                "displayName": "Developers",
                "description": "Developers is a built-in group. Its membership is managed by the system. Signed-in users fall into this group.",
                "builtIn": true,
                "type": "system"
            }
        },
        {
            "type": "Microsoft.ApiManagement/service/products/groups",
            "apiVersion": "2019-01-01",
            "name": "[concat(parameters('service_authn_authz_name'), '/unlimited/developers')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service/products', parameters('service_authn_authz_name'), 'unlimited')]",
                "[resourceId('Microsoft.ApiManagement/service', parameters('service_authn_authz_name'))]"
            ],
            "properties": {
                "displayName": "Developers",
                "description": "Developers is a built-in group. Its membership is managed by the system. Signed-in users fall into this group.",
                "builtIn": true,
                "type": "system"
            }
        },
        {
            "type": "Microsoft.ApiManagement/service/products/groups",
            "apiVersion": "2019-01-01",
            "name": "[concat(parameters('service_authn_authz_name'), '/starter/guests')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service/products', parameters('service_authn_authz_name'), 'starter')]",
                "[resourceId('Microsoft.ApiManagement/service', parameters('service_authn_authz_name'))]"
            ],
            "properties": {
                "displayName": "Guests",
                "description": "Guests is a built-in group. Its membership is managed by the system. Unauthenticated users visiting the developer portal fall into this group.",
                "builtIn": true,
                "type": "system"
            }
        },
        {
            "type": "Microsoft.ApiManagement/service/products/groups",
            "apiVersion": "2019-01-01",
            "name": "[concat(parameters('service_authn_authz_name'), '/unlimited/guests')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service/products', parameters('service_authn_authz_name'), 'unlimited')]",
                "[resourceId('Microsoft.ApiManagement/service', parameters('service_authn_authz_name'))]"
            ],
            "properties": {
                "displayName": "Guests",
                "description": "Guests is a built-in group. Its membership is managed by the system. Unauthenticated users visiting the developer portal fall into this group.",
                "builtIn": true,
                "type": "system"
            }
        },
        {
            "type": "Microsoft.ApiManagement/service/products/policies",
            "apiVersion": "2019-01-01",
            "name": "[concat(parameters('service_authn_authz_name'), '/starter/policy')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service/products', parameters('service_authn_authz_name'), 'starter')]",
                "[resourceId('Microsoft.ApiManagement/service', parameters('service_authn_authz_name'))]"
            ],
            "properties": {
                "value": "<!--\r\n            IMPORTANT:\r\n            - Policy elements can appear only within the <inbound>, <outbound>, <backend> section elements.\r\n            - Only the <forward-request> policy element can appear within the <backend> section element.\r\n            - To apply a policy to the incoming request (before it is forwarded to the backend service), place a corresponding policy element within the <inbound> section element.\r\n            - To apply a policy to the outgoing response (before it is sent back to the caller), place a corresponding policy element within the <outbound> section element.\r\n            - To add a policy position the cursor at the desired insertion point and click on the round button associated with the policy.\r\n            - To remove a policy, delete the corresponding policy statement from the policy document.\r\n            - Position the <base> element within a section element to inherit all policies from the corresponding section element in the enclosing scope.\r\n            - Remove the <base> element to prevent inheriting policies from the corresponding section element in the enclosing scope.\r\n            - Policies are applied in the order of their appearance, from the top down.\r\n        -->\r\n<policies>\r\n  <inbound>\r\n    <rate-limit calls=\"5\" renewal-period=\"60\" />\r\n    <quota calls=\"100\" renewal-period=\"604800\" />\r\n    <base />\r\n  </inbound>\r\n  <backend>\r\n    <base />\r\n  </backend>\r\n  <outbound>\r\n    <base />\r\n  </outbound>\r\n</policies>",
                "format": "xml"
            }
        },
        {
            "type": "Microsoft.Network/applicationGateways",
            "apiVersion": "2019-07-01",
            "name": "[parameters('applicationGateways_AuthN_AuthZ_Gateway_V2_name')]",
            "location": "southcentralus",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_AuthN_AuthZ_Vnet_name'), 'GATEWAY-V2')]",
                "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddresses_AuthN_AuthZ_IP_V2_name'))]"
            ],
            "properties": {
                "sku": {
                    "name": "Standard_v2",
                    "tier": "Standard_v2",
                    "capacity": 2
                },
                "gatewayIPConfigurations": [
                    {
                        "name": "appGatewayIpConfig",
                        "properties": {
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_AuthN_AuthZ_Vnet_name'), 'GATEWAY-V2')]"
                            }
                        }
                    }
                ],
                "sslCertificates": [
                    {
                        "name": "marvingarcia-xyz",
                        "properties": {}
                    },
                    {
                        "name": "SelfSignedCert",
                        "properties": {}
                    },
                    {
                        "name": "VerifiedMarvinGarcia",
                        "properties": {}
                    }
                ],
                "trustedRootCertificates": [
                    {
                        "name": "BackendFunctionHttpscab070cf-d22b-41ac-bfe2-d714c940b014",
                        "properties": {
                            "data": "MIIDMzCCAhugAwIBAgIQbj3hpm7lb4hFoRRT5ONT7jANBgkqhkiG9w0BAQsFADAdMRswGQYDVQQDDBIqLm1hcnZpbmdhcmNpYS54eXowHhcNMTkwOTEyMDQxMDQ5WhcNMjAwOTEyMDQzMDQ5WjAdMRswGQYDVQQDDBIqLm1hcnZpbmdhcmNpYS54eXowggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQC1N+ln3M9bZECjL26AUq9/DV38K40ZocWTgQX19wSgRSuyODiCWZe9OdckfZf8CZvTSPirSHwow9fjfFaUZeAc1q/R2bMX0V9Xui7M6s+GAM8hph1BvJQ3ZOAKtqSDfCJLoR2wtb1VXijyhLPWFeRU9emefKFvGfDCmU38+PTOz0emUGykt57/WcRlzHs+Ix4mmyS58hCg45ayxy2ddYlKmWDFH55O0OvXMsHaUC7e3DsKahrYcr/iZessJcqWZ3z5VhG+OOztdFXUJkskDaLOWT+izPL62qfLBhOYso8HdjeGmkRBGxJvu3BBdniIhNUVuioD57ZGflcGCZJHLPM1AgMBAAGjbzBtMA4GA1UdDwEB/wQEAwIFoDAdBgNVHSUEFjAUBggrBgEFBQcDAgYIKwYBBQUHAwEwHQYDVR0RBBYwFIISKi5tYXJ2aW5nYXJjaWEueHl6MB0GA1UdDgQWBBQ5B1lOPBhwHeS0UrvyNiWSWCk/8TANBgkqhkiG9w0BAQsFAAOCAQEAkRapR0lhy4spyqtVl376KWmkPT1EB74BmsieHwKtj/hac4cdDd5YbZJxAUwUg5Uw0L7WtXdYTrCbxjVibEr5odjKuA7A4rN7B1aaJVbV4oaEpdR3KwsKePOy8iHbJXBczJBixnOdqpJUVV/c1NtaWbhysUlm8OEDdyNsJDfC1w7GzUObPjuxJT3+gA1ntu13yPABxit6UkLIF4z1AF4Of6c9inn43E6CisUZq3jay0M5YTGj8xGrDNq6qvRBAVfDhyNM6O6G99GfjBOKYUs67vzQVCDYyMj18WFhy31/wOpdwMGaXzeWQE9cAXh4hXtBYz4wla8heUduIw0hABuj6Q=="
                        }
                    },
                    {
                        "name": "SelfSignedRoot",
                        "properties": {
                            "data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tDQpNSUlDN3pDQ0FkZWdBd0lCQWdJUVFrb2JXU25GU3BsSnRMS0ZoTmlDbWpBTkJna3Foa2lHOXcwQkFRc0ZBREFhDQpNUmd3RmdZRFZRUUREQTkzZDNjdVkyOXVkRzl6Ynk1amIyMHdIaGNOTVRrd09URXlNakUwTXpVMVdoY05NakF3DQpPVEV5TWpJd016VTFXakFhTVJnd0ZnWURWUVFEREE5M2QzY3VZMjl1ZEc5emJ5NWpiMjB3Z2dFaU1BMEdDU3FHDQpTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFEK1hWUmU0QjhrbFBHeEdXOWxYdzFLYVg2YlE4MzNtclZRDQp1OVovYkpobUprWVR6VmszdXBPUVJSSlJrSlRldE15b0dWQlFSamJtTW4vRTZkai9zZ3h4dkYrTnFrVHVraDg3DQp4K2prcGZ4ZlU3d3pmbmlLWUxWSGJ0bjlCbno4cDZ4MGE0WFlSM0NJZWJFZ0RhZDhYTVMrWXlvSDR1aWRYN2xKDQpGUUhjT2t0dlA0Y0tpRWtJYVpnVk1LMXRKdVRUSW9VY2JoeStDT3EwMGxtZ1RCRzJiZnFMVEM2OTlTK2taQ0pnDQovY05HeWhSMy9SL2dJVEplKzZSZlZCY2liKy9nZkViMUtHbW50ZHhVNFRvUFZxbTBDMXp4MGZKUDNwYjFhdnRBDQo4SEtqR05UVWd5U3IxNDE1ZG00Q1hGVityYUk4S2I3NGZJYXRzWm1nZTB6M2YzK0VhSGVaQWdNQkFBR2pNVEF2DQpNQTRHQTFVZER3RUIvd1FFQXdJRm9EQWRCZ05WSFE0RUZnUVUrdWhBNlZmMmpqcy9nYnhyd2tnam5QM05uMjB3DQpEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBSDQyclRkekI1c2Y2WmxRS01ndzVoSUhsSU0yR3QwMUZFQm8rSUdlDQpFVG5WYXlQUE9hbVZ5S05aSTlPKzBWRkJVWmdtMVZiQlNPRTVaYldGck82ZU8vamZvbUo5VGZDN3EreHIxVmIwDQprc25oV25MdVQ3WVZ1SlRmSnJZOGcvbzJ6RzdxS3I1NEpaNWg4Z29YeU01TldIZkxrTjliUFQ2MmZyVnRrODl0DQplVTQwNFVQQ1FkOTJGM0F6RlEwTGJINERPbTdQVU5YWk5hTFBseHR1MHI4djhPZFg1aHVIYlFWOUlJa0hxN0hqDQpRUFYzS0IyZHFnOGlubUdCMkZDaXpiOXlqRXBYQk01YkRxMHFiM1VSV0cxSGVIRG82SVB0UUY2ZHFSblFaaGdUDQpMdFpXQ015NDQvTm0yWUNGOTA5aWg0N2ZweG1GRzRSYmVpTDQ3TFk3OVI5Z29VQT0NCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0NCg=="
                        }
                    }
                ],
                "frontendIPConfigurations": [
                    {
                        "name": "appGwPublicFrontendIp",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddresses_AuthN_AuthZ_IP_V2_name'))]"
                            }
                        }
                    }
                ],
                "frontendPorts": [
                    {
                        "name": "port_443",
                        "properties": {
                            "port": 443
                        }
                    },
                    {
                        "name": "port_80",
                        "properties": {
                            "port": 80
                        }
                    }
                ],
                "backendAddressPools": [
                    {
                        "name": "BackendFunction",
                        "properties": {
                            "backendAddresses": [
                                {
                                    "fqdn": "backendfunctionapp.ase.appserviceenvironment.net"
                                }
                            ]
                        }
                    },
                    {
                        "name": "FrontendApp",
                        "properties": {
                            "backendAddresses": [
                                {
                                    "fqdn": "frontentappsvc.ase.appserviceenvironment.net"
                                }
                            ]
                        }
                    }
                ],
                "backendHttpSettingsCollection": [
                    {
                        "name": "BackendFunctionHttps",
                        "properties": {
                            "port": 443,
                            "protocol": "Https",
                            "cookieBasedAffinity": "Disabled",
                            "hostName": "backendfunctionapp.marvingarcia.xyz",
                            "pickHostNameFromBackendAddress": false,
                            "affinityCookieName": "ApplicationGatewayAffinity",
                            "path": "/",
                            "requestTimeout": 20,
                            "probe": {
                                "id": "[concat(resourceId('Microsoft.Network/applicationGateways', parameters('applicationGateways_AuthN_AuthZ_Gateway_V2_name')), '/probes/BackendFunctionHttpscab070cf-d22b-41ac-bfe2-d714c940b015')]"
                            }
                        }
                    },
                    {
                        "name": "FrontendAppHttps",
                        "properties": {
                            "port": 443,
                            "protocol": "Https",
                            "cookieBasedAffinity": "Disabled",
                            "hostName": "frontentappsvc.marvingarcia.xyz",
                            "pickHostNameFromBackendAddress": false,
                            "path": "/",
                            "requestTimeout": 20,
                            "probe": {
                                "id": "[concat(resourceId('Microsoft.Network/applicationGateways', parameters('applicationGateways_AuthN_AuthZ_Gateway_V2_name')), '/probes/FrontendAppHttps')]"
                            }
                        }
                    }
                ],
                "httpListeners": [
                    {
                        "name": "BackendFunctionHttps",
                        "properties": {
                            "frontendIPConfiguration": {
                                "id": "[concat(resourceId('Microsoft.Network/applicationGateways', parameters('applicationGateways_AuthN_AuthZ_Gateway_V2_name')), '/frontendIPConfigurations/appGwPublicFrontendIp')]"
                            },
                            "frontendPort": {
                                "id": "[concat(resourceId('Microsoft.Network/applicationGateways', parameters('applicationGateways_AuthN_AuthZ_Gateway_V2_name')), '/frontendPorts/port_443')]"
                            },
                            "protocol": "Https",
                            "sslCertificate": {
                                "id": "[concat(resourceId('Microsoft.Network/applicationGateways', parameters('applicationGateways_AuthN_AuthZ_Gateway_V2_name')), '/sslCertificates/VerifiedMarvinGarcia')]"
                            },
                            "hostName": "backendfunctionapp.marvingarcia.xyz",
                            "requireServerNameIndication": false
                        }
                    },
                    {
                        "name": "FrontendAppHttps",
                        "properties": {
                            "frontendIPConfiguration": {
                                "id": "[concat(resourceId('Microsoft.Network/applicationGateways', parameters('applicationGateways_AuthN_AuthZ_Gateway_V2_name')), '/frontendIPConfigurations/appGwPublicFrontendIp')]"
                            },
                            "frontendPort": {
                                "id": "[concat(resourceId('Microsoft.Network/applicationGateways', parameters('applicationGateways_AuthN_AuthZ_Gateway_V2_name')), '/frontendPorts/port_443')]"
                            },
                            "protocol": "Https",
                            "sslCertificate": {
                                "id": "[concat(resourceId('Microsoft.Network/applicationGateways', parameters('applicationGateways_AuthN_AuthZ_Gateway_V2_name')), '/sslCertificates/VerifiedMarvinGarcia')]"
                            },
                            "hostName": "frontentappsvc.marvingarcia.xyz",
                            "requireServerNameIndication": false
                        }
                    },
                    {
                        "name": "900listener",
                        "properties": {
                            "frontendIPConfiguration": {
                                "id": "[concat(resourceId('Microsoft.Network/applicationGateways', parameters('applicationGateways_AuthN_AuthZ_Gateway_V2_name')), '/frontendIPConfigurations/appGwPublicFrontendIp')]"
                            },
                            "frontendPort": {
                                "id": "[concat(resourceId('Microsoft.Network/applicationGateways', parameters('applicationGateways_AuthN_AuthZ_Gateway_V2_name')), '/frontendPorts/port_80')]"
                            },
                            "protocol": "Http",
                            "hostName": "backend.com",
                            "requireServerNameIndication": false
                        }
                    }
                ],
                "urlPathMaps": [],
                "requestRoutingRules": [
                    {
                        "name": "BackendFunctionHttps",
                        "properties": {
                            "ruleType": "Basic",
                            "httpListener": {
                                "id": "[concat(resourceId('Microsoft.Network/applicationGateways', parameters('applicationGateways_AuthN_AuthZ_Gateway_V2_name')), '/httpListeners/BackendFunctionHttps')]"
                            },
                            "backendAddressPool": {
                                "id": "[concat(resourceId('Microsoft.Network/applicationGateways', parameters('applicationGateways_AuthN_AuthZ_Gateway_V2_name')), '/backendAddressPools/BackendFunction')]"
                            },
                            "backendHttpSettings": {
                                "id": "[concat(resourceId('Microsoft.Network/applicationGateways', parameters('applicationGateways_AuthN_AuthZ_Gateway_V2_name')), '/backendHttpSettingsCollection/BackendFunctionHttps')]"
                            }
                        }
                    },
                    {
                        "name": "FrontendAppHttps",
                        "properties": {
                            "ruleType": "Basic",
                            "httpListener": {
                                "id": "[concat(resourceId('Microsoft.Network/applicationGateways', parameters('applicationGateways_AuthN_AuthZ_Gateway_V2_name')), '/httpListeners/FrontendAppHttps')]"
                            },
                            "backendAddressPool": {
                                "id": "[concat(resourceId('Microsoft.Network/applicationGateways', parameters('applicationGateways_AuthN_AuthZ_Gateway_V2_name')), '/backendAddressPools/FrontendApp')]"
                            },
                            "backendHttpSettings": {
                                "id": "[concat(resourceId('Microsoft.Network/applicationGateways', parameters('applicationGateways_AuthN_AuthZ_Gateway_V2_name')), '/backendHttpSettingsCollection/FrontendAppHttps')]"
                            }
                        }
                    }
                ],
                "probes": [
                    {
                        "name": "BackendFunctionHttpscab070cf-d22b-41ac-bfe2-d714c940b015",
                        "properties": {
                            "protocol": "Https",
                            "path": "/api/id",
                            "interval": 30,
                            "timeout": 30,
                            "unhealthyThreshold": 3,
                            "pickHostNameFromBackendHttpSettings": true,
                            "minServers": 0,
                            "match": {
                                "statusCodes": [
                                    "200-401"
                                ]
                            }
                        }
                    },
                    {
                        "name": "FrontendAppHttps",
                        "properties": {
                            "protocol": "Https",
                            "path": "/",
                            "interval": 30,
                            "timeout": 30,
                            "unhealthyThreshold": 3,
                            "pickHostNameFromBackendHttpSettings": true,
                            "minServers": 0,
                            "match": {
                                "statusCodes": [
                                    "200-401"
                                ]
                            }
                        }
                    }
                ],
                "rewriteRuleSets": [],
                "redirectConfigurations": [],
                "enableHttp2": false
            }
        },
        {
            "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
            "apiVersion": "2018-09-01",
            "name": "[concat(parameters('privateDnsZones_ase.appserviceenvironment.net_name'), '/vnetlink')]",
            "location": "global",
            "dependsOn": [
                "[resourceId('Microsoft.Network/privateDnsZones', parameters('privateDnsZones_ase.appserviceenvironment.net_name'))]",
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_AuthN_AuthZ_Vnet_name'))]"
            ],
            "properties": {
                "registrationEnabled": true,
                "virtualNetwork": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_AuthN_AuthZ_Vnet_name'))]"
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
            "apiVersion": "2019-04-01",
            "name": "[concat(parameters('storageAccounts_backendfunctiona03c_name'), '/default/azure-webjobs-hosts')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', parameters('storageAccounts_backendfunctiona03c_name'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_backendfunctiona03c_name'))]"
            ],
            "properties": {
                "publicAccess": "None"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
            "apiVersion": "2019-04-01",
            "name": "[concat(parameters('storageAccounts_backendfunctiona03c_name'), '/default/azure-webjobs-secrets')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', parameters('storageAccounts_backendfunctiona03c_name'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_backendfunctiona03c_name'))]"
            ],
            "properties": {
                "publicAccess": "None"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
            "apiVersion": "2019-04-01",
            "name": "[concat(parameters('storageAccounts_backendfunctiona03c_name'), '/default/insights-logs-applicationgatewayaccesslog')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', parameters('storageAccounts_backendfunctiona03c_name'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_backendfunctiona03c_name'))]"
            ],
            "properties": {
                "publicAccess": "None"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
            "apiVersion": "2019-04-01",
            "name": "[concat(parameters('storageAccounts_backendfunctiona03c_name'), '/default/insights-logs-applicationgatewayperformancelog')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', parameters('storageAccounts_backendfunctiona03c_name'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_backendfunctiona03c_name'))]"
            ],
            "properties": {
                "publicAccess": "None"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
            "apiVersion": "2019-04-01",
            "name": "[concat(parameters('storageAccounts_backendfunctiona03c_name'), '/default/insights-metrics-pt1m')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', parameters('storageAccounts_backendfunctiona03c_name'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_backendfunctiona03c_name'))]"
            ],
            "properties": {
                "publicAccess": "None"
            }
        },
        {
            "type": "Microsoft.Web/sites",
            "apiVersion": "2016-08-01",
            "name": "[parameters('sites_backendappsvc_name')]",
            "location": "South Central US",
            "dependsOn": [
                "[resourceId('Microsoft.Web/serverfarms', parameters('serverfarms_AuthN_AuthZ_Plan_name'))]",
                "[resourceId('Microsoft.Web/hostingEnvironments', parameters('hostingEnvironments_ase_name'))]"
            ],
            "kind": "app",
            "properties": {
                "enabled": true,
                "hostNameSslStates": [
                    {
                        "name": "[concat(parameters('sites_backendappsvc_name'), '.ase.appserviceenvironment.net')]",
                        "sslState": "Disabled",
                        "hostType": "Standard"
                    },
                    {
                        "name": "[concat(parameters('sites_backendappsvc_name'), '.scm.ase.appserviceenvironment.net')]",
                        "sslState": "Disabled",
                        "hostType": "Repository"
                    }
                ],
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', parameters('serverfarms_AuthN_AuthZ_Plan_name'))]",
                "reserved": false,
                "scmSiteAlsoStopped": false,
                "hostingEnvironmentProfile": {
                    "id": "[resourceId('Microsoft.Web/hostingEnvironments', parameters('hostingEnvironments_ase_name'))]"
                },
                "clientAffinityEnabled": true,
                "clientCertEnabled": false,
                "hostNamesDisabled": false,
                "containerSize": 0,
                "dailyMemoryTimeQuota": 0,
                "httpsOnly": false
            }
        },
        {
            "type": "Microsoft.Web/sites",
            "apiVersion": "2016-08-01",
            "name": "[parameters('sites_backendfunctionapp_name')]",
            "location": "South Central US",
            "dependsOn": [
                "[resourceId('Microsoft.Web/serverfarms', parameters('serverfarms_AuthN_AuthZ_Plan_name'))]",
                "[resourceId('Microsoft.Web/hostingEnvironments', parameters('hostingEnvironments_ase_name'))]"
            ],
            "kind": "functionapp",
            "properties": {
                "enabled": true,
                "hostNameSslStates": [
                    {
                        "name": "[concat(parameters('sites_backendfunctionapp_name'), '.ase.appserviceenvironment.net')]",
                        "sslState": "Disabled",
                        "hostType": "Standard"
                    },
                    {
                        "name": "[concat(parameters('sites_backendfunctionapp_name'), '.marvingarcia.xyz')]",
                        "sslState": "SniEnabled",
                        "thumbprint": "325D6EF8231B052DA06E3646A450BD5D8CD0F4DE",
                        "hostType": "Standard"
                    },
                    {
                        "name": "[concat(parameters('sites_backendfunctionapp_name'), '.scm.ase.appserviceenvironment.net')]",
                        "sslState": "Disabled",
                        "hostType": "Repository"
                    }
                ],
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', parameters('serverfarms_AuthN_AuthZ_Plan_name'))]",
                "reserved": false,
                "scmSiteAlsoStopped": false,
                "hostingEnvironmentProfile": {
                    "id": "[resourceId('Microsoft.Web/hostingEnvironments', parameters('hostingEnvironments_ase_name'))]"
                },
                "clientAffinityEnabled": false,
                "clientCertEnabled": false,
                "hostNamesDisabled": false,
                "containerSize": 1536,
                "dailyMemoryTimeQuota": 0,
                "httpsOnly": false
            }
        },
        {
            "type": "Microsoft.Web/sites",
            "apiVersion": "2016-08-01",
            "name": "[parameters('sites_frontentappsvc_name')]",
            "location": "South Central US",
            "dependsOn": [
                "[resourceId('Microsoft.Web/serverfarms', parameters('serverfarms_AuthN_AuthZ_Plan_name'))]",
                "[resourceId('Microsoft.Web/hostingEnvironments', parameters('hostingEnvironments_ase_name'))]"
            ],
            "kind": "app",
            "properties": {
                "enabled": true,
                "hostNameSslStates": [
                    {
                        "name": "[concat(parameters('sites_frontentappsvc_name'), '.ase.appserviceenvironment.net')]",
                        "sslState": "Disabled",
                        "hostType": "Standard"
                    },
                    {
                        "name": "[concat(parameters('sites_frontentappsvc_name'), '.marvingarcia.xyz')]",
                        "sslState": "SniEnabled",
                        "thumbprint": "325D6EF8231B052DA06E3646A450BD5D8CD0F4DE",
                        "hostType": "Standard"
                    },
                    {
                        "name": "[concat(parameters('sites_frontentappsvc_name'), '.scm.ase.appserviceenvironment.net')]",
                        "sslState": "Disabled",
                        "hostType": "Repository"
                    }
                ],
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', parameters('serverfarms_AuthN_AuthZ_Plan_name'))]",
                "reserved": false,
                "scmSiteAlsoStopped": false,
                "hostingEnvironmentProfile": {
                    "id": "[resourceId('Microsoft.Web/hostingEnvironments', parameters('hostingEnvironments_ase_name'))]"
                },
                "clientAffinityEnabled": true,
                "clientCertEnabled": false,
                "hostNamesDisabled": false,
                "containerSize": 0,
                "dailyMemoryTimeQuota": 0,
                "httpsOnly": false
            }
        },
        {
            "type": "Microsoft.ApiManagement/service/apis/operations/policies",
            "apiVersion": "2019-01-01",
            "name": "[concat(parameters('service_authn_authz_name'), '/echo-api/create-resource/policy')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('service_authn_authz_name'), 'echo-api', 'create-resource')]",
                "[resourceId('Microsoft.ApiManagement/service/apis', parameters('service_authn_authz_name'), 'echo-api')]",
                "[resourceId('Microsoft.ApiManagement/service', parameters('service_authn_authz_name'))]"
            ],
            "properties": {
                "value": "<policies>\r\n  <inbound>\r\n    <base />\r\n    <json-to-xml apply=\"always\" consider-accept-header=\"false\" />\r\n  </inbound>\r\n  <backend>\r\n    <base />\r\n  </backend>\r\n  <outbound>\r\n    <base />\r\n  </outbound>\r\n</policies>",
                "format": "xml"
            }
        },
        {
            "type": "Microsoft.ApiManagement/service/apis/operations/policies",
            "apiVersion": "2019-01-01",
            "name": "[concat(parameters('service_authn_authz_name'), '/echo-api/retrieve-header-only/policy')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('service_authn_authz_name'), 'echo-api', 'retrieve-header-only')]",
                "[resourceId('Microsoft.ApiManagement/service/apis', parameters('service_authn_authz_name'), 'echo-api')]",
                "[resourceId('Microsoft.ApiManagement/service', parameters('service_authn_authz_name'))]"
            ],
            "properties": {
                "value": "<policies>\r\n  <inbound>\r\n    <base />\r\n  </inbound>\r\n  <backend>\r\n    <base />\r\n  </backend>\r\n  <outbound>\r\n    <base />\r\n    <set-header name=\"X-My-Sample\" exists-action=\"override\">\r\n      <value>This is a sample</value>\r\n      <!-- for multiple headers with the same name add additional value elements -->\r\n    </set-header>\r\n    <jsonp callback-parameter-name=\"ProcessResponse\" />\r\n  </outbound>\r\n</policies>",
                "format": "xml"
            }
        },
        {
            "type": "Microsoft.ApiManagement/service/apis/operations/policies",
            "apiVersion": "2019-01-01",
            "name": "[concat(parameters('service_authn_authz_name'), '/echo-api/retrieve-resource-cached/policy')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('service_authn_authz_name'), 'echo-api', 'retrieve-resource-cached')]",
                "[resourceId('Microsoft.ApiManagement/service/apis', parameters('service_authn_authz_name'), 'echo-api')]",
                "[resourceId('Microsoft.ApiManagement/service', parameters('service_authn_authz_name'))]"
            ],
            "properties": {
                "value": "<policies>\r\n  <inbound>\r\n    <base />\r\n    <cache-lookup vary-by-developer=\"false\" vary-by-developer-groups=\"false\">\r\n      <vary-by-header>Accept</vary-by-header>\r\n      <vary-by-header>Accept-Charset</vary-by-header>\r\n    </cache-lookup>\r\n    <rewrite-uri template=\"/resource\" />\r\n  </inbound>\r\n  <backend>\r\n    <base />\r\n  </backend>\r\n  <outbound>\r\n    <base />\r\n    <cache-store duration=\"3600\" />\r\n  </outbound>\r\n</policies>",
                "format": "xml"
            }
        },
        {
            "type": "Microsoft.ApiManagement/service/diagnostics/loggers",
            "apiVersion": "2018-01-01",
            "name": "[concat(parameters('service_authn_authz_name'), '/applicationinsights/', parameters('service_authn_authz_name'), '-Insights')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service/diagnostics', parameters('service_authn_authz_name'), 'applicationinsights')]",
                "[resourceId('Microsoft.ApiManagement/service', parameters('service_authn_authz_name'))]",
                "[resourceId('microsoft.insights/components', parameters('components_AuthN_AuthZ_Insights_name'))]"
            ],
            "properties": {
                "loggerType": "applicationInsights",
                "credentials": {
                    "instrumentationKey": "{{Logger-Credentials-5d79d8f7f51c850184caa2d2}}"
                },
                "isBuffered": true,
                "resourceId": "[resourceId('microsoft.insights/components', parameters('components_AuthN_AuthZ_Insights_name'))]"
            }
        },
        {
            "type": "Microsoft.ApiManagement/service/subscriptions",
            "apiVersion": "2019-01-01",
            "name": "[concat(parameters('service_authn_authz_name'), '/5d79d2399de6a80082070001')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service', parameters('service_authn_authz_name'))]",
                "[resourceId('Microsoft.ApiManagement/service/users', parameters('service_authn_authz_name'), '1')]",
                "[resourceId('Microsoft.ApiManagement/service/products', parameters('service_authn_authz_name'), 'starter')]"
            ],
            "properties": {
                "ownerId": "[resourceId('Microsoft.ApiManagement/service/users', parameters('service_authn_authz_name'), '1')]",
                "scope": "[resourceId('Microsoft.ApiManagement/service/products', parameters('service_authn_authz_name'), 'starter')]",
                "state": "active",
                "primaryKey": "fdac6f89b6a0436aac7753dbf0e01ff6",
                "secondaryKey": "d763eea008a34d9c9b712ed3f7adf48f",
                "allowTracing": true,
                "displayName": "[parameters('subscriptions_5d79d2399de6a80082070001_displayName')]"
            }
        },
        {
            "type": "Microsoft.ApiManagement/service/subscriptions",
            "apiVersion": "2019-01-01",
            "name": "[concat(parameters('service_authn_authz_name'), '/5d79d23a9de6a80082070002')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service', parameters('service_authn_authz_name'))]",
                "[resourceId('Microsoft.ApiManagement/service/users', parameters('service_authn_authz_name'), '1')]",
                "[resourceId('Microsoft.ApiManagement/service/products', parameters('service_authn_authz_name'), 'unlimited')]"
            ],
            "properties": {
                "ownerId": "[resourceId('Microsoft.ApiManagement/service/users', parameters('service_authn_authz_name'), '1')]",
                "scope": "[resourceId('Microsoft.ApiManagement/service/products', parameters('service_authn_authz_name'), 'unlimited')]",
                "state": "active",
                "primaryKey": "c51a503bbb0a45d99aa0dad1f579237f",
                "secondaryKey": "53afc13c5906490fb55a1ea77d5a8aa3",
                "allowTracing": true,
                "displayName": "[parameters('subscriptions_5d79d23a9de6a80082070002_displayName')]"
            }
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2019-07-01",
            "name": "[parameters('networkInterfaces_jumpbox476_name')]",
            "location": "southcentralus",
            "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddresses_Jumpbox_ip_name'))]",
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_AuthN_AuthZ_Vnet_name'), 'VMs')]",
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_Jumpbox_nsg_name'))]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAddress": "10.0.2.4",
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddresses_Jumpbox_ip_name'))]"
                            },
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_AuthN_AuthZ_Vnet_name'), 'VMs')]"
                            },
                            "primary": true,
                            "privateIPAddressVersion": "IPv4"
                        }
                    }
                ],
                "dnsSettings": {
                    "dnsServers": []
                },
                "enableAcceleratedNetworking": false,
                "enableIPForwarding": false,
                "networkSecurityGroup": {
                    "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_Jumpbox_nsg_name'))]"
                }
            }
        }
    ]
}